/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import almacen.DetalleRegistro;
import almacen.ModeloTablaDetalleRegistro;
import hibernate.anotaciones.util.ObjectModelDAO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelos.Almacen;
import modelos.ConteoMercanciaEntrada;
import modelos.ConteoMercanciaEntradaDetalles;
import modelos.ConteoMercanciaEntradaDetallesPK;
import modelos.EntradaProveedor;
import modelos.Factura;
import modelos.InventarioTienda;
import modelos.InventarioTiendaPK;
import modelos.Usuario;

/**
 *
 * @author Pablo
 */
public class PtomaFisica extends javax.swing.JPanel {

    // <editor-fold defaultstate="collapsed" desc="Objetos">
    //Objetos
    PtomaFisica esto = this;
    int Conteofaltante = 0;
    int pos = -1;
    Float TotalFaltante = 0f;
    Almacen al = new Almacen();
    Usuario user = JFInicioSecionMiyake.us1;
    EntradaProveedor proEP;
    Factura fa;
    DetalleRegistro deReg;

    //Listas
    List<DetalleRegistro> listaDetalle = new ArrayList<>();

    //Modelos Tablas    
    ModeloTablaDetalleRegistro mta = new ModeloTablaDetalleRegistro();
    // </editor-fold>  

    /**
     * Creates new form PtomaFisica
     */
    public PtomaFisica() {
        initComponents();
        jTDetalleRegistroDistribuidora.setModel(mta);
        busy.setVisible(false);
        busy.setBusy(false);
//        usuarios1();
    }

//public void usuarios1(){
//     
//    
////     String sql = "FROM Usuario u order by u.idUsuario asc";
////        List<List> resultListUsuarios = ObjectModelDAO.getResultQuery(sql);
//    List<List> resultListUsuarios = FventanaIncial.listaUsuarioMain;
//     for (Object object : resultListUsuarios) {
//                Usuario u = (Usuario) object;
//                //comboBoxUsuarios.addItem(u.getNombre());
//              //  comboBoxUsuarios.setSelectedItem(u.getNombre());
//            }
//    
//    
//    
//}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlListaRegistros = new javax.swing.JPanel();
        busy = new org.jdesktop.swingx.JXBusyLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButtonListarFacturas = new javax.swing.JButton();
        txtEstatus = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFactura = new javax.swing.JTextField();
        jButtonConfirmarFactura = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTDetalleRegistroDistribuidora = new javax.swing.JTable();
        jButtonGuardarConteo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanelProductos = new javax.swing.JLayeredPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        txtBucarProducto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonBuscarProducto = new javax.swing.JButton();
        jButtonListarProductos = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButtonAgregarConteo = new javax.swing.JButton();
        txtbulto = new javax.swing.JTextField();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        comboBoxTipoBusqueda = new javax.swing.JComboBox();

        setAutoscrolls(true);
        setPreferredSize(new java.awt.Dimension(800, 800));

        pnlListaRegistros.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));
        pnlListaRegistros.setAutoscrolls(true);

        busy.setBorder(new javax.swing.border.MatteBorder(null));
        busy.setText("GUARDANDO...!!!");

        jLayeredPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButtonListarFacturas.setText("Seleccionar");
        jButtonListarFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarFacturasActionPerformed(evt);
            }
        });

        txtEstatus.setEnabled(false);
        txtEstatus.setMinimumSize(new java.awt.Dimension(40, 22));

        jLabel8.setText("Emitido Por");

        txtFactura.setEnabled(false);
        txtFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacturaActionPerformed(evt);
            }
        });

        jButtonConfirmarFactura.setText("Confirmar");
        jButtonConfirmarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarFacturaActionPerformed(evt);
            }
        });

        jLabel9.setText("Numero");

        jLabel2.setText("Listar Factura Pendientes:");

        jXButton1.setText("Cancelar");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonListarFacturas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jXButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonConfirmarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListarFacturas)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConfirmarFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(jButtonListarFacturas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtEstatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButtonConfirmarFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jXButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jTDetalleRegistroDistribuidora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTDetalleRegistroDistribuidora.setCellSelectionEnabled(true);
        jTDetalleRegistroDistribuidora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDetalleRegistroDistribuidoraKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTDetalleRegistroDistribuidora);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGuardarConteo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonGuardarConteo.setText("Guardar");
        jButtonGuardarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarConteoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("TOMA FISICA DE INVENTARIO.");

        jPanelProductos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Producto");
        jLabel4.setEnabled(false);

        jLabel5.setText("Busqueda");
        jLabel5.setEnabled(false);

        txtDescripcion.setEnabled(false);

        txtBucarProducto.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Descripcion:");
        jLabel1.setEnabled(false);

        jButtonBuscarProducto.setText("Buscar");
        jButtonBuscarProducto.setEnabled(false);
        jButtonBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarProductoActionPerformed(evt);
            }
        });

        jButtonListarProductos.setText("Listar");
        jButtonListarProductos.setEnabled(false);
        jButtonListarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarProductosActionPerformed(evt);
            }
        });

        txtCodigo.setEnabled(false);
        txtCodigo.setFocusCycleRoot(true);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel10.setText("Nro Bulto");
        jLabel10.setEnabled(false);

        txtCantidad.setEnabled(false);
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("Cantidad");
        jLabel6.setEnabled(false);

        jButtonAgregarConteo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonAgregarConteo.setText("Agregar ");
        jButtonAgregarConteo.setEnabled(false);
        jButtonAgregarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarConteoActionPerformed(evt);
            }
        });

        txtbulto.setEnabled(false);
        txtbulto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbultoActionPerformed(evt);
            }
        });

        jXLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jXLabel1.setText("(Introduzca Datos y Preciones Enter )");

        comboBoxTipoBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo SKU", "Referencia", "Descripcion" }));
        comboBoxTipoBusqueda.setEnabled(false);

        javax.swing.GroupLayout jPanelProductosLayout = new javax.swing.GroupLayout(jPanelProductos);
        jPanelProductos.setLayout(jPanelProductosLayout);
        jPanelProductosLayout.setHorizontalGroup(
            jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductosLayout.createSequentialGroup()
                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProductosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo))
                    .addGroup(jPanelProductosLayout.createSequentialGroup()
                        .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelProductosLayout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelProductosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanelProductosLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBucarProducto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonListarProductos))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelProductosLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel6)
                                        .addGap(36, 36, 36)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtbulto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonAgregarConteo))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelProductosLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDescripcion)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelProductosLayout.setVerticalGroup(
            jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBucarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarProducto)
                    .addComponent(jLabel5)
                    .addComponent(jButtonListarProductos)
                    .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAgregarConteo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(txtbulto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelProductos.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(txtDescripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(txtBucarProducto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jButtonBuscarProducto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jButtonListarProductos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(txtCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(txtCantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jButtonAgregarConteo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(txtbulto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(jXLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPanelProductos.setLayer(comboBoxTipoBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnlListaRegistrosLayout = new javax.swing.GroupLayout(pnlListaRegistros);
        pnlListaRegistros.setLayout(pnlListaRegistrosLayout);
        pnlListaRegistrosLayout.setHorizontalGroup(
            pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jLabel3))
                            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addComponent(jButtonGuardarConteo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelProductos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLayeredPane2)
                            .addComponent(jLayeredPane1))))
                .addContainerGap())
        );
        pnlListaRegistrosLayout.setVerticalGroup(
            pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardarConteo)
                    .addComponent(jButton1)
                    .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(168, 168, 168))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlListaRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlListaRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtbultoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbultoActionPerformed
        try {
            // AgregarConteo();
            this.jButtonAgregarConteo.requestFocus();
        } catch (Exception ex) {
            Logger.getLogger(PtomaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtbultoActionPerformed

    private void jButtonAgregarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarConteoActionPerformed
        try {
            int total = this.proEP.getCantidadProducto() * this.proEP.getCantidadSet();

            deReg = new DetalleRegistro();
            deReg.setEp(proEP);

            deReg.setCantidad(Integer.parseInt(this.txtCantidad.getText()));
            deReg.setBulto(Integer.parseInt(this.txtbulto.getText()));
            //deReg.setConteoFaltante(Conteofaltante);

           // if (total = Integer.parseInt(this.txtCantidad.getText()) || total <= Integer.parseInt(this.txtCantidad.getText())) {
//            if(true){
                Conteofaltante = Integer.parseInt(this.txtCantidad.getText());
                //negativo:llego menos de lo que deberia
                //positivo:llego mas de lo que deberia
                Conteofaltante -= total;               
                deReg.setConteoFaltante(Conteofaltante);
                deReg.setTotalFaltante(Math.abs(Conteofaltante) * proEP.getIdProducto().getPrecioOriginal());
//            }
            
            deReg.getEp().setEstatus("Aprobado");
            listaDetalle.add(deReg);

            mta.setListaDetalleResgistro(listaDetalle);
            mta.fireTableDataChanged();
            // mta.setBandera(true);

            this.txtCodigo.setText("");
            this.txtDescripcion.setText("");
            this.txtCantidad.setText("");
            this.txtbulto.setText("");
            this.txtCodigo.requestFocus();

        } catch (Exception ex) {
            Logger.getLogger(PtomaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonAgregarConteoActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped

        char car = evt.getKeyChar();

        if ((car < '0' || car > '9')) {
            //  System.err.println("cacarter:*********+  -->" + car);
            evt.consume();
        }
        if (this.txtCantidad.getText().length() == 9) {
            evt.consume();
            // System.err.println("***************txtCantidadKeyTyped segundo 2º IF" + this.txtCantidad.getText());
        }

    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed

        int total = this.proEP.getCantidadProducto() * this.proEP.getCantidadSet();
        if (total == Integer.parseInt(this.txtCantidad.getText())) {
            this.txtbulto.setEnabled(true);
            this.txtbulto.requestFocus();
            this.jButtonAgregarConteo.setEnabled(true);
        } else {

            int respuesta = JOptionPane.showConfirmDialog(null, "lA CANTIDA DEL PRODUCTO ES IMCOMPLETA...\n La Cantidad Correcta Deberia Ser :" + total + "\n ¿Desea Continuar de Igual Manera?",
                    "COMPROBACION DE CANTIDADES", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
            this.txtbulto.setEnabled(true);
            this.txtbulto.requestFocus();
            this.jButtonAgregarConteo.setEnabled(true);
            }

        }


    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // ValidarCodigoBarra();
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void jButtonListarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarProductosActionPerformed
        try {

            // int a = 2;
//            JDListaProductosEntradaProveedor jdProductosEP = new JDListaProductosEntradaProveedor(null, true,
//                    (List<EntradaProveedor>) fa.getEntradaProveedorCollection());

//            jdProductosEP.setVisible(true);
//            if (jdProductosEP.proEP == null) {
//                JOptionPane.showMessageDialog(this, "No ha Seleccioado Producto");
//            } else {
//                this.proEP = jdProductosEP.proEP;
//                //****************AQUI Dierecciona los valores****************
//
//                this.txtCodigo.setText(proEP.getIdProducto().getReferenciaProducto());
//                this.txtDescripcion.setText(proEP.getIdProducto().getDescripcion());
//
//                this.txtCantidad.setEnabled(true);
//                this.txtCantidad.requestFocus();
//            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonListarProductosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonGuardarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarConteoActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                jButtonGuardarConteo.setEnabled(false);
                busy.setVisible(true);
                busy.setBusy(true);

                Float total = 0f;

                try {
                    ConteoMercanciaEntrada cab = new ConteoMercanciaEntrada(al, ObjectModelDAO.getObject(Integer.parseInt(esto.txtFactura.getText()), Factura.class), user);
                    Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
                    if (id_creado_cabecera != -1) {//se creo

                        for (DetalleRegistro dr : listaDetalle) {

                            total += dr.getCantidad() * dr.getEp().getIdProducto().getPrecioOriginal();

                            //Crear Objeto PK_DeatllesConteo
                            ConteoMercanciaEntradaDetallesPK detallePK = new ConteoMercanciaEntradaDetallesPK(
                                    
                                    dr.getEp().getIdProducto().getIdProducto(),
                                    id_creado_cabecera);

                            //Crear Objeto DeatllesConteo
                            ConteoMercanciaEntradaDetalles detalle = new ConteoMercanciaEntradaDetalles(
                                    detallePK,
                                    dr.getConteoFaltante(),
                                    dr.getTotalFaltante(),
                                    dr.getBulto(),
                                    dr.getCantidad(),
                                    cab,
                                    dr.getEp().getIdProducto()
                            );

                            //Guardando Cabecera y Detalles de Toma Fisica 
                            try {
                                Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                                if (id_creado_detalle instanceof ConteoMercanciaEntradaDetallesPK
                                        && ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle) == null) {
                                    System.err.println("ERROR ó Exitos AL CREAR REGISTRO DETALLES "
                                            + ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle).toString());
                                } else {//se creo
                                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");

                                }

                            } catch (Exception e) {
                                System.err.println("ERROR CON PK_Detalle : " + e);
                            }

                            //Guardando Inventario
                            try {
                                //Guaradar InventarioPK
                                System.err.println("Creando PK inventario");
                                InventarioTiendaPK inventarioPK = new InventarioTiendaPK(
                                        
                                        dr.getEp().getIdProducto().getIdProducto(),
                                al.getIdAlmacen()
                                );
                                //Guaradar Inventario
                                InventarioTienda id_in = ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class);
                                System.err.println("ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class) es: " + id_in);
                                if (id_in == null) {
                                    System.err.println("CREANDO Inventartio Tienda IF(Guaradar Inventario) id_in is null");
                                    id_in = new InventarioTienda(
                                            inventarioPK,
                                            dr.getCantidad(),
                                            al,
                                            dr.getEp().getIdProducto()
                                    );
                                    id_in.setPrecioSinDescuento(dr.getEp().getIdProducto().getPrecioOriginal());
                                    id_in.setDescuento(0);
                                    Object id_creado_inventario = ObjectModelDAO.saveObject(id_in);
                                    if (id_creado_inventario instanceof InventarioTiendaPK
                                            && ((InventarioTiendaPK) id_creado_inventario) == null) {
                                        System.err.println("1 ERROR!!! REGISTRANDO DATOS EN INVENTARIOPK");
                                    } else {
                                        System.err.println("0 Exito¡¡¡ REGISTRANDO DATOS EN INVENTARIOPK");
                                    }
                                } else {
                                   // id_in.setPrecio(dr.ep.getIdProducto().getPrecioOriginal());
                                    //id_in.setDescuento(0f);
                                    id_in.setCantidad(id_in.getCantidad() + dr.getCantidad());
                                    ObjectModelDAO.updateObject(id_in);
                                    System.err.println("Actualizando Inventario de Producto Existente");
                                }
                            } catch (Exception e) {
                                System.err.println("ERROR GUARDANDO EN INVENTARIO : " + e);
                            }

                            //Guardar Estatus de FActura en ENtradaProveedor
                            try {

                            } catch (Exception e) {
                                System.err.println("ERROR ACTUALIZANDO ESTATUS DE FACTURA");
                            }
                            
                            
                            ObjectModelDAO.updateObject(dr.getEp());
                        }

                    }
                    cab.setTotalConteo(total);
                    

                    //  cab.setTotal(total);
                    ObjectModelDAO.updateObject(cab);

                } catch (Exception ex) {
                    System.err.println("Excepcion en Guardar Registro : " + ex);
                    Logger.getLogger(PtomaFisica.class.getName()).log(Level.SEVERE, null, ex);
                }

                busy.setVisible(false);
                busy.setBusy(false);
                jButtonGuardarConteo.setEnabled(true);
            }
        };
        hilo.start();
    }//GEN-LAST:event_jButtonGuardarConteoActionPerformed

    private void jTDetalleRegistroDistribuidoraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDetalleRegistroDistribuidoraKeyReleased
                if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                    if (JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?",
                        "Eliminar registro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    //se elimina
                    int i;
                    int[] selection = jTDetalleRegistroDistribuidora.getSelectedRows();
                    for (i = 0; i < selection.length; i++) {
                        selection[i] = jTDetalleRegistroDistribuidora.convertRowIndexToModel(selection[i]);
                    }
                    this.listaDetalle.remove(selection[i - 1]);
                    mta.fireTableRowsDeleted(selection[0], selection[selection.length - 1]);
        
                }
                }
    }//GEN-LAST:event_jTDetalleRegistroDistribuidoraKeyReleased

    private void jButtonConfirmarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarFacturaActionPerformed

        try {
            this.jButtonListarFacturas.setEnabled(false);
            this.jPanelProductos.setEnabled(true);
            this.jButtonListarProductos.setEnabled(true);
            this.txtBucarProducto.setEnabled(true);
            this.jButtonBuscarProducto.setEnabled(true);
            this.jButtonConfirmarFactura.setEnabled(false);
            al.setIdAlmacen(1);

        } catch (Exception e) {
            System.err.println("ERROR en Confirmar Factura : " + e);
        }
    }//GEN-LAST:event_jButtonConfirmarFacturaActionPerformed

    private void txtFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacturaActionPerformed
        //   ValidarFactura();
    }//GEN-LAST:event_txtFacturaActionPerformed

    private void jButtonListarFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarFacturasActionPerformed

        try {
            JDFacturasPendientes jdFactura = new JDFacturasPendientes(null, true);
            jdFactura.setLocationRelativeTo(null);
            jdFactura.setVisible(true);
            if (jdFactura.factura == null) {
                JOptionPane.showMessageDialog(this, "no ha Seleccionado Facturas");
            } else {
                fa = jdFactura.factura;
                this.txtFactura.setText(fa.getIdFactura().toString());
                this.txtEstatus.setText(fa.getRecibidoPor());

                //fa.setIdFactura(4);
                // this.txtAlmcen.setText(al.getNombre());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar Lista de Facturas" + ex);
        }

        //    ListarFacturas();
    }//GEN-LAST:event_jButtonListarFacturasActionPerformed

    private void jButtonBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarProductoActionPerformed

        String referencia = this.proEP.getIdProducto().getReferenciaProducto();
        int codigo = this.proEP.getIdProducto().getIdProducto();

        if (referencia.equals(this.txtBucarProducto.getText())) {
            this.txtCodigo.setText(this.proEP.getIdProducto().getReferenciaProducto());
            this.txtDescripcion.setText(this.proEP.getIdProducto().getDescripcion());
            this.txtCantidad.requestFocus();
        }
        if (codigo == Integer.parseInt(this.txtBucarProducto.getText())) {
            this.txtCodigo.setText(this.proEP.getIdProducto().getIdProducto().toString());
            this.txtDescripcion.setText(this.proEP.getIdProducto().getDescripcion());
            this.txtCantidad.requestFocus();
        }

    }//GEN-LAST:event_jButtonBuscarProductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JComboBox comboBoxTipoBusqueda;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAgregarConteo;
    private javax.swing.JButton jButtonBuscarProducto;
    private javax.swing.JButton jButtonConfirmarFactura;
    private javax.swing.JButton jButtonGuardarConteo;
    private javax.swing.JButton jButtonListarFacturas;
    private javax.swing.JButton jButtonListarProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jPanelProductos;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTDetalleRegistroDistribuidora;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private javax.swing.JPanel pnlListaRegistros;
    private javax.swing.JTextField txtBucarProducto;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEstatus;
    private javax.swing.JTextField txtFactura;
    private javax.swing.JTextField txtbulto;
    // End of variables declaration//GEN-END:variables
}
