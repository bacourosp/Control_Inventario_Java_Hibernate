/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import almacen.DetalleRegistro;
import almacen.MetodoGenerales;
import hibernate.anotaciones.util.ObjectModelDAO;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelos.Almacen;
import modelos.ConteoMercanciaEntrada;
import modelos.ConteoMercanciaEntradaDetalles;
import modelos.ConteoMercanciaEntradaDetallesPK;
import modelos.EntradaProveedor;
import modelos.Factura;
import modelos.Producto;
import modelos.Usuario;

/**
 *
 * @author Pablo
 */
public class PTomaFisicaInventario extends javax.swing.JPanel {
    private Factura fa = null;
    private Almacen al = null;
    private Usuario user = null;
    private List<DetalleRegistro> listaDetalle;
    private DetalleRegistro deReg;
    private Producto pro;
    private int bandera = 0;
    private EntradaProveedor proEP;
    private int Conteofaltante;

    /**
     * Creates new form PTomaFisicaInventario
     */
    public PTomaFisicaInventario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlListaRegistros = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTDetalleRegistro = new javax.swing.JTable();
        pnlRegistro = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtAlmcen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonListarAlmacenes = new javax.swing.JButton();
        jButtonAceptarCabecera = new javax.swing.JButton();
        jButtonCancelarCabecera = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtFactura = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEstatus = new javax.swing.JTextField();
        jButtonListarFacturas = new javax.swing.JButton();
        txtTrabajador = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButtonGuardarConteo = new javax.swing.JButton();
        pnlRegistro1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jButtonListarProductos = new javax.swing.JButton();
        txtDescripcion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonAgregarConteo = new javax.swing.JButton();
        txtbulto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        busy = new org.jdesktop.swingx.JXBusyLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        pnlListaRegistros.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        jTDetalleRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTDetalleRegistro.setCellSelectionEnabled(true);
        jTDetalleRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDetalleRegistroKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTDetalleRegistro);

        pnlRegistro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));
        pnlRegistro.setFocusTraversalPolicyProvider(true);
        pnlRegistro.setPreferredSize(new java.awt.Dimension(250, 100));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Almacen");

        txtAlmcen.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Usuario");

        jButtonListarAlmacenes.setText("+");
        jButtonListarAlmacenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarAlmacenesActionPerformed(evt);
            }
        });

        jButtonAceptarCabecera.setText("Aceptar");
        jButtonAceptarCabecera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarCabeceraActionPerformed(evt);
            }
        });

        jButtonCancelarCabecera.setText("Cancelar");
        jButtonCancelarCabecera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarCabeceraActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel7.setText("Factura");

        txtFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacturaActionPerformed(evt);
            }
        });

        jLabel8.setText("Por");

        txtEstatus.setEnabled(false);
        txtEstatus.setMinimumSize(new java.awt.Dimension(40, 22));

        jButtonListarFacturas.setText("+");
        jButtonListarFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarFacturasActionPerformed(evt);
            }
        });

        txtTrabajador.setEnabled(false);
        txtTrabajador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrabajadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegistroLayout = new javax.swing.GroupLayout(pnlRegistro);
        pnlRegistro.setLayout(pnlRegistroLayout);
        pnlRegistroLayout.setHorizontalGroup(
            pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroLayout.createSequentialGroup()
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jButtonAceptarCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelarCabecera)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlRegistroLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlmcen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarAlmacenes))
                    .addGroup(pnlRegistroLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonListarFacturas)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRegistroLayout.setVerticalGroup(
            pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jButtonListarFacturas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAlmcen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonListarAlmacenes))
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(pnlRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptarCabecera)
                    .addComponent(jButtonCancelarCabecera))
                .addGap(64, 64, 64))
        );

        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonGuardarConteo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonGuardarConteo.setText("Guardar");
        jButtonGuardarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarConteoActionPerformed(evt);
            }
        });

        pnlRegistro1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));
        pnlRegistro1.setFocusTraversalPolicyProvider(true);
        pnlRegistro1.setPreferredSize(new java.awt.Dimension(250, 100));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Producto");
        jLabel4.setEnabled(false);

        txtCodigo.setFocusCycleRoot(true);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jButtonListarProductos.setText("+");
        jButtonListarProductos.setEnabled(false);
        jButtonListarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarProductosActionPerformed(evt);
            }
        });

        txtDescripcion.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Descripcion:");
        jLabel1.setEnabled(false);

        jButtonAgregarConteo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonAgregarConteo.setText("Agregar ");
        jButtonAgregarConteo.setEnabled(false);
        jButtonAgregarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarConteoActionPerformed(evt);
            }
        });

        txtbulto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbultoActionPerformed(evt);
            }
        });

        jLabel10.setText("Nro Bulto");
        jLabel10.setEnabled(false);

        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("Cantidad");
        jLabel6.setEnabled(false);

        javax.swing.GroupLayout pnlRegistro1Layout = new javax.swing.GroupLayout(pnlRegistro1);
        pnlRegistro1.setLayout(pnlRegistro1Layout);
        pnlRegistro1Layout.setHorizontalGroup(
            pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistro1Layout.createSequentialGroup()
                .addGroup(pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistro1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegistro1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtbulto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAgregarConteo)
                                .addGap(0, 176, Short.MAX_VALUE))
                            .addComponent(txtDescripcion)))
                    .addGroup(pnlRegistro1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel4)
                        .addGap(7, 7, 7)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListarProductos)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlRegistro1Layout.setVerticalGroup(
            pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistro1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonListarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtbulto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregarConteo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        busy.setBorder(new javax.swing.border.MatteBorder(null));
        busy.setText("GUARDANDO...!!!");

        javax.swing.GroupLayout pnlListaRegistrosLayout = new javax.swing.GroupLayout(pnlListaRegistros);
        pnlListaRegistros.setLayout(pnlListaRegistrosLayout);
        pnlListaRegistrosLayout.setHorizontalGroup(
            pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2)
                                .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                                    .addComponent(pnlRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                                    .addComponent(pnlRegistro1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                                .addComponent(jButtonGuardarConteo)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))))
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        pnlListaRegistrosLayout.setVerticalGroup(
            pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addComponent(pnlRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addGap(46, 46, 46))
                    .addGroup(pnlListaRegistrosLayout.createSequentialGroup()
                        .addComponent(pnlRegistro1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListaRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardarConteo)
                    .addComponent(jButton1))
                .addGap(10, 10, 10))
        );

        add(pnlListaRegistros);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonListarAlmacenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarAlmacenesActionPerformed
        // ListarAlmacenes();

    }//GEN-LAST:event_jButtonListarAlmacenesActionPerformed
    private boolean validar() {
        boolean estado = false;
        if (true) {
            // if (al != null && tra != null && jdFechaRegistro.getDate() != null) {
            estado = true;
        }
        return estado;
    }
    private void jButtonAceptarCabeceraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarCabeceraActionPerformed

        if (validar() == true) {
            MetodoGenerales.activarControles3(pnlRegistro, false);
            MetodoGenerales.activarControles3(pnlListaRegistros, true);
        } else {
            JOptionPane.showMessageDialog(this, "Faltan Datos");
        }
    }//GEN-LAST:event_jButtonAceptarCabeceraActionPerformed

    private void jButtonCancelarCabeceraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarCabeceraActionPerformed
        al = null;
        user = null;
        this.txtAlmcen.setText("");
        this.txtTrabajador.setText("");
    }//GEN-LAST:event_jButtonCancelarCabeceraActionPerformed

    
    private void txtFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacturaActionPerformed
        //   ValidarFactura();
    }//GEN-LAST:event_txtFacturaActionPerformed

    private void jButtonListarFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarFacturasActionPerformed

        try {
            JDFacturasPendientes jdFactura = new JDFacturasPendientes(null, true);
            jdFactura.setLocationRelativeTo(null);
            jdFactura.setVisible(true);
            if (jdFactura.factura == null) {
                JOptionPane.showMessageDialog(this, "no ha Seleccionado Facturas");
            } else {
                fa = jdFactura.factura;
                this.txtFactura.setText(fa.getIdFactura().toString());
                this.txtEstatus.setText(fa.getRecibidoPor());

                //fa.setIdFactura(4);
                // this.txtAlmcen.setText(al.getNombre());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar Lista de Facturas" + ex);
        }

        //    ListarFacturas();
    }//GEN-LAST:event_jButtonListarFacturasActionPerformed

    private void txtTrabajadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrabajadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrabajadorActionPerformed

    private void GuardarConteoHibernateEP() throws Exception {
        Float total = 0f;
        int TotalFaltante2;
        TotalFaltante2 = 0;
        fa.setIdFactura(Integer.parseInt(this.txtFactura.getText()));//ObjectModelDAO.getObject(Integer.parseInt(this.txtFactura.getText()), Factura.class)
        ConteoMercanciaEntrada cab = new ConteoMercanciaEntrada(al, fa, user);
        Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
        if (id_creado_cabecera != -1) {//se creo

            for (DetalleRegistro dr : listaDetalle) {
                //  System.out.println("Datos Lista : " + dr.toString());
                // total += dr.getProducto().getPrecioVenta();
                //int id_producto_ref = daoEntradaProveedor.getId_Producto(dr.getEp().getReferenciaProducto());
                
                
                total +=dr.getTotalFaltante();

                ConteoMercanciaEntradaDetallesPK detallePK = new ConteoMercanciaEntradaDetallesPK(
                        // Integer.parseInt(dr.getProducto().getReferenciaProducto()),
                        //Integer.parseInt(dr.getEp().getReferenciaProducto()),
                        //dr.codigoProducto,
                        dr.getEp().getIdProducto().getIdProducto(),
                        id_creado_cabecera);

                ConteoMercanciaEntradaDetalles detalle = new ConteoMercanciaEntradaDetalles(
                        detallePK,
                        dr.getConteoFaltante(),
                        dr.getTotalFaltante(),
                        dr.getBulto(),
                        dr.getCantidad(),
                        cab,
                        dr.getEp().getIdProducto()
                );

                Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                if (id_creado_detalle instanceof ConteoMercanciaEntradaDetallesPK
                        && ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle) == null) {
                    System.err.println("ERROR AL CREAR REGISTRO DETALLES "
                            + ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle).toString());
                } else {//se creo
                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");
                }
            }
        }
        cab.setTotalConteo(total);

        //cab.setTotal(total);
        ObjectModelDAO.updateObject(cab);
    }

    private void GuardarConteoHibernate() {
        Float total = 0f;

        ConteoMercanciaEntrada cab = new ConteoMercanciaEntrada(al, ObjectModelDAO.getObject(Integer.parseInt(this.txtFactura.getText()), Factura.class), user);
        Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
        if (id_creado_cabecera != -1) {//se creo

            for (DetalleRegistro dr : listaDetalle) {

                //total += dr.getProducto().getPrecioProductoTiendaCollection().;

                ConteoMercanciaEntradaDetallesPK detallePK = new ConteoMercanciaEntradaDetallesPK(
                        dr.getEp().getIdProducto().getIdProducto(),
                        id_creado_cabecera);

                ConteoMercanciaEntradaDetalles detalle = new ConteoMercanciaEntradaDetalles(
                        detallePK,
                        dr.getBulto(),
                        dr.getCantidad(),
                        cab,
                        dr.getEp().getIdProducto()
                );

                Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                if (id_creado_detalle instanceof ConteoMercanciaEntradaDetallesPK
                        && ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle) == null) {
                    System.err.println("ERROR AL CREAR REGISTRO DETALLES "
                            + ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle).toString());
                } else {//se creo
                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");
                }
            }
        }
        cab.setTotalConteo(total);

        //cab.setTotal(total);
        ObjectModelDAO.updateObject(cab);
        //System.err.println("lista");
    }

    private void jButtonGuardarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarConteoActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                jButtonGuardarConteo.setEnabled(false);
                busy.setVisible(true);
                busy.setBusy(true);
                //        GuardarConteo();GuardarListaConteo();
                switch (bandera) {
                    case 0: {
                        try {
                            GuardarConteoHibernateEP();
                        } catch (Exception ex) {
                            Logger.getLogger(PtomaFisica.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    break;
                    case 1:
                    GuardarConteoHibernate();

                    /**
                    * default: throw new AssertionError();
                    */
                }
                busy.setVisible(false);
                busy.setBusy(false);
                jButtonGuardarConteo.setEnabled(true);
            }
        };
        hilo.start();
    }//GEN-LAST:event_jButtonGuardarConteoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.setVisible(true);
        //this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // ValidarCodigoBarra();
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        this.txtbulto.requestFocus();
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped

        char car = evt.getKeyChar();

        if ((car < '0' || car > '9')) {
            //  System.err.println("cacarter:*********+  -->" + car);
            evt.consume();
        }
        if (this.txtCantidad.getText().length() == 4) {
            evt.consume();
            // System.err.println("***************txtCantidadKeyTyped segundo 2º IF" + this.txtCantidad.getText());
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

  
    private void txtbultoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbultoActionPerformed
        try {
//            AgregarConteo();
            this.txtCodigo.requestFocus();
        } catch (Exception ex) {
            Logger.getLogger(PTomaFisicaInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_txtbultoActionPerformed

    private void jButtonAgregarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarConteoActionPerformed
        try {
         //   AgregarConteo();
        } catch (Exception ex) {
            Logger.getLogger(PTomaFisicaInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAgregarConteoActionPerformed

    private void jButtonListarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarProductosActionPerformed
        //        try {
            //            if (jComboBoxSeleccionarTipoConsulta.getSelectedIndex() == 0) {
                //                //  MiyakeGestionAlmacen.cb = jComboBoxSeleccionarTipoConsulta;
                //                JDListaProductosEntradaProveedor jdProductosEP = new JDListaProductosEntradaProveedor(this, true);
                //                jdProductosEP.setVisible(true);
                //                if (jdProductosEP.proEP == null) {
                    //                    JOptionPane.showMessageDialog(this, "No ha Seleccioado Producto");
                    //                } else {
                    //                    proEP = jdProductosEP.proEP;
                    //                    //****************AQUI Dierecciona los valores****************
                    //                    this.txtCodigo.setText(proEP.getReferenciaProducto());
                    //                    this.txtDescripcion.setText(proEP.getDescripcionProducto());
                    //                    // this.txtCantidad.setFocusCycleRoot(rootPaneCheckingEnabled);
                    //                    this.txtCantidad.requestFocus();
                    //                    //    mta.fireTableDataChanged();
                    //                }
                //            } else {
                //                if (jComboBoxSeleccionarTipoConsulta.getSelectedIndex() == 1) {
                    //                    //    MiyakeGestionAlmacen.cb = jComboBoxSeleccionarTipoConsulta;
                    //                    JDListaProductosMiyake jdProductos = new JDListaProductosMiyake(this, true);
                    //                    jdProductos.setVisible(true);
                    //                    if (jdProductos.pro == null) {
                        //                        JOptionPane.showMessageDialog(this, "No ha Seleccioado Producto");
                        //                    } else {
                        //                        pro = jdProductos.pro;
                        //                        //****************AQUI Dierecciona los valores****************
                        //                        this.txtCodigo.setText(pro.getReferenciaProducto());
                        //                        this.txtDescripcion.setText(pro.getDescripcion());
                        //                        // this.txtCantidad.setFocusCycleRoot(rootPaneCheckingEnabled);
                        //                        this.txtCantidad.requestFocus();
                        //                        // mta.fireTableDataChanged();
                        //                    }
                    //                }
                //            }
            //        } catch (Exception e) {
            //            JOptionPane.showMessageDialog(this, "Error al cargar Lista de Trabajadores" + e);
            //        }
    }//GEN-LAST:event_jButtonListarProductosActionPerformed

    private void jTDetalleRegistroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDetalleRegistroKeyReleased
        //        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            //            if (JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?",
                //                "Eliminar registro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            //            //se elimina
            //            int i;
            //            int[] selection = jTDetalleRegistro.getSelectedRows();
            //            for (i = 0; i < selection.length; i++) {
                //                selection[i] = jTDetalleRegistro.convertRowIndexToModel(selection[i]);
                //            }
            //            this.listaDetalle.remove(selection[i - 1]);
            //            mta.fireTableRowsDeleted(selection[0], selection[selection.length - 1]);
            //
            //        }
        //        }
    }//GEN-LAST:event_jTDetalleRegistroKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAceptarCabecera;
    private javax.swing.JButton jButtonAgregarConteo;
    private javax.swing.JButton jButtonCancelarCabecera;
    private javax.swing.JButton jButtonGuardarConteo;
    private javax.swing.JButton jButtonListarAlmacenes;
    private javax.swing.JButton jButtonListarFacturas;
    private javax.swing.JButton jButtonListarProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTDetalleRegistro;
    private javax.swing.JPanel pnlListaRegistros;
    private javax.swing.JPanel pnlRegistro;
    private javax.swing.JPanel pnlRegistro1;
    private javax.swing.JTextField txtAlmcen;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEstatus;
    private javax.swing.JTextField txtFactura;
    private javax.swing.JTextField txtTrabajador;
    private javax.swing.JTextField txtbulto;
    // End of variables declaration//GEN-END:variables
}
