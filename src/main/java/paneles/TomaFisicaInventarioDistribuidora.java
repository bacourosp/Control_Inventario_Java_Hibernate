/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import almacen.DetalleRegistro;
import almacen.ModeloTablaDetalleRegistro;
import hibernate.anotaciones.util.ObjectModelDAO;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelos.Almacen;
import modelos.ConteoMercanciaEntrada;
import modelos.ConteoMercanciaEntradaDetalles;
import modelos.ConteoMercanciaEntradaDetallesPK;
import modelos.EntradaProveedor;
import modelos.Factura;
import modelos.InventarioTienda;
import modelos.InventarioTiendaPK;
import modelos.Producto;
import modelos.Usuario;

/**
 *
 * @author Pablo
 */
public class TomaFisicaInventarioDistribuidora extends javax.swing.JPanel {

    Usuario user = JFInicioSecionMiyake.us1;
    Usuario ususrioActual = null;
    Almacen almacenActual = null;

    //Listas
    List listaEP = null;
    List listaDetalleAux = null;
    List<DetalleRegistro> listaDetalle = new ArrayList<>();
    //OBjetos
    EntradaProveedor proEP = null;
    Producto pro = null;
    private Factura fa = null;
    private DetalleRegistro deReg;
    // Variables
    int Conteofaltante = 0;
    int renglon = 1;
    int posUs = -1;
    int posTi = -1;
    //Tabla
    ModeloTablaDetalleRegistro modeloTablaTomaFisicaInventarioDistribuidora = new ModeloTablaDetalleRegistro();

    /**
     * Creates new form NewJPanel
     */
    public TomaFisicaInventarioDistribuidora() {
        initComponents();
        //ComboBoxAlmacenes
        this.jTDetalleRegistroDistribuidora.setModel(modeloTablaTomaFisicaInventarioDistribuidora);
        this.almacenActual = new Almacen();
        this.almacenActual.setNombre("DISTRIBUIDORA MIYAKE CENTRAL");
        this.almacenActual.setDescripcion("(ALMACEN PRINCIPAL)");
        comboBoxAlmacen.removeAllItems();
        comboBoxAlmacen.addItem(almacenActual.getNombre() + " :" + almacenActual.getDescripcion());
        //Usuarios
        comboBoxUsuarios.removeAllItems();
        comboBoxUsuarios.addItem(user.getNombre() + " :" + user.getDescripcion());
        //  this.comboBoxUsuarios.setEnabled(false);
        this.busy.setVisible(false);
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new TomaFisicaInventarioDistribuidora().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jLayeredPanePrincipal = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLayeredPaneTienda = new javax.swing.JLayeredPane();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        botonConfirmarFactura = new org.jdesktop.swingx.JXButton();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        comboBoxAlmacen = new javax.swing.JComboBox();
        comboBoxUsuarios = new javax.swing.JComboBox();
        botonCancelarTodoDesdeFActura = new org.jdesktop.swingx.JXButton();
        jButtonListarFacturas = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEmitidoPor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFactura = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        txtFechaFactura = new org.jdesktop.swingx.JXTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLayeredPaneProductos = new javax.swing.JLayeredPane();
        jLayeredPaneBuscarProducto = new javax.swing.JLayeredPane();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        txtBusqueda = new org.jdesktop.swingx.JXTextField();
        jXButtonBuscar = new org.jdesktop.swingx.JXButton();
        comboBoxTipoBusqueda = new javax.swing.JComboBox();
        botonListarProductosInventariTienda = new org.jdesktop.swingx.JXButton();
        jLayeredPaneDatosProductos = new javax.swing.JLayeredPane();
        txtDescripcion = new org.jdesktop.swingx.JXTextField();
        txtCantidadSugeridad = new org.jdesktop.swingx.JXTextField();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        txtReferencia = new org.jdesktop.swingx.JXTextField();
        txtCodigo = new org.jdesktop.swingx.JXTextField();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        labelReferencia = new org.jdesktop.swingx.JXLabel();
        botonAgregar = new org.jdesktop.swingx.JXButton();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        txtMarca = new org.jdesktop.swingx.JXTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        txtCantidad = new org.jdesktop.swingx.JXTextField();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtNroBulto = new org.jdesktop.swingx.JXTextField();
        botonLimpiarAgregar = new org.jdesktop.swingx.JXButton();
        botonValidar = new org.jdesktop.swingx.JXButton();
        jSeparator2 = new javax.swing.JSeparator();
        jXLabel12 = new org.jdesktop.swingx.JXLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTDetalleRegistroDistribuidora = new javax.swing.JTable();
        jButtonGuardarConteo = new org.jdesktop.swingx.JXButton();
        busy = new org.jdesktop.swingx.JXBusyLabel();

        jScrollPane2.setAutoscrolls(true);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(800, 800));

        jLayeredPaneTienda.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar Factura"));
        jLayeredPaneTienda.setPreferredSize(new java.awt.Dimension(610, 110));

        jXLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/responsable1.png"))); // NOI18N
        jXLabel2.setText("Responsable");

        botonConfirmarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/conect.png"))); // NOI18N
        botonConfirmarFactura.setText("Confirmar");
        botonConfirmarFactura.setEnabled(false);
        botonConfirmarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarFacturaActionPerformed(evt);
            }
        });

        jXLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/distribuidora.png"))); // NOI18N
        jXLabel1.setText("Almacen");

        comboBoxAlmacen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAlmacenActionPerformed(evt);
            }
        });

        comboBoxUsuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        botonCancelarTodoDesdeFActura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/reiniciar.png"))); // NOI18N
        botonCancelarTodoDesdeFActura.setText("Reiniciar");
        botonCancelarTodoDesdeFActura.setEnabled(false);
        botonCancelarTodoDesdeFActura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarTodoDesdeFActuraActionPerformed(evt);
            }
        });

        jButtonListarFacturas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/confirmar.png"))); // NOI18N
        jButtonListarFacturas.setText("Seleccionar Facturas Pendientes");
        jButtonListarFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarFacturasActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/facturas.png"))); // NOI18N
        jLabel2.setText("Factura Pendientes:");

        txtEmitidoPor.setEditable(false);
        txtEmitidoPor.setEnabled(false);
        txtEmitidoPor.setMinimumSize(new java.awt.Dimension(40, 22));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/responsable2.png"))); // NOI18N
        jLabel8.setText("Emitido Por");

        txtFactura.setEditable(false);
        txtFactura.setEnabled(false);
        txtFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacturaActionPerformed(evt);
            }
        });

        jLabel9.setText("Numero");

        jXLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/fecha.png"))); // NOI18N
        jXLabel10.setText("Fecha");

        txtFechaFactura.setEditable(false);
        txtFechaFactura.setEnabled(false);

        javax.swing.GroupLayout jLayeredPaneTiendaLayout = new javax.swing.GroupLayout(jLayeredPaneTienda);
        jLayeredPaneTienda.setLayout(jLayeredPaneTiendaLayout);
        jLayeredPaneTiendaLayout.setHorizontalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxAlmacen, 0, 313, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonListarFacturas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmitidoPor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonCancelarTodoDesdeFActura, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(botonConfirmarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jLayeredPaneTiendaLayout.setVerticalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonListarFacturas)
                            .addComponent(jLabel2)))
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonConfirmarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCancelarTodoDesdeFActura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEmitidoPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jLayeredPaneTienda.setLayer(jXLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(botonConfirmarFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxAlmacen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxUsuarios, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(botonCancelarTodoDesdeFActura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jButtonListarFacturas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtEmitidoPor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(txtFechaFactura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setViewportView(jLayeredPaneTienda);

        jScrollPane4.setAutoscrolls(true);

        jLayeredPaneProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));
        jLayeredPaneProductos.setAutoscrolls(true);

        jLayeredPaneBuscarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        jXLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/tipo.png"))); // NOI18N
        jXLabel7.setText("Tipo Busqueda");

        txtBusqueda.setEnabled(false);
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        jXButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/buscar2.png"))); // NOI18N
        jXButtonBuscar.setText("Buscar");
        jXButtonBuscar.setEnabled(false);
        jXButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonBuscarActionPerformed(evt);
            }
        });

        comboBoxTipoBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo SKU", "Referencia", "Descripcion" }));
        comboBoxTipoBusqueda.setEnabled(false);
        comboBoxTipoBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxTipoBusquedaItemStateChanged(evt);
            }
        });

        botonListarProductosInventariTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/productos.png"))); // NOI18N
        botonListarProductosInventariTienda.setText("Productos");
        botonListarProductosInventariTienda.setEnabled(false);
        botonListarProductosInventariTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarProductosInventariTiendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneBuscarProductoLayout = new javax.swing.GroupLayout(jLayeredPaneBuscarProducto);
        jLayeredPaneBuscarProducto.setLayout(jLayeredPaneBuscarProductoLayout);
        jLayeredPaneBuscarProductoLayout.setHorizontalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jLayeredPaneBuscarProductoLayout.setVerticalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jLayeredPaneBuscarProducto.setLayer(jXLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(txtBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(jXButtonBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(comboBoxTipoBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(botonListarProductosInventariTienda, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneDatosProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Producto"));

        txtDescripcion.setEditable(false);
        txtDescripcion.setEnabled(false);

        txtCantidadSugeridad.setEditable(false);
        txtCantidadSugeridad.setEnabled(false);

        jXLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/stock.png"))); // NOI18N
        jXLabel6.setText("Sugerido");

        txtReferencia.setEditable(false);
        txtReferencia.setDisabledTextColor(new java.awt.Color(212, 208, 200));
        txtReferencia.setEnabled(false);

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);

        jXLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/etiquetas.png"))); // NOI18N
        jXLabel3.setText("CodigoSKU");

        jXLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/descripcion.png"))); // NOI18N
        jXLabel5.setText("Descripcion");

        labelReferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/codigo1.png"))); // NOI18N
        labelReferencia.setText("Referencia");

        botonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/agregar1.png"))); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.setEnabled(false);
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        jXLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/marca4.png"))); // NOI18N
        jXLabel4.setText("Marca");

        txtMarca.setEditable(false);
        txtMarca.setEnabled(false);

        jXLabel8.setText("Cantidad");

        txtCantidad.setEnabled(false);
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jXLabel9.setText("Bulto");

        txtNroBulto.setEnabled(false);

        botonLimpiarAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/limpiar.png"))); // NOI18N
        botonLimpiarAgregar.setText("Limpiar");
        botonLimpiarAgregar.setEnabled(false);
        botonLimpiarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarAgregarActionPerformed(evt);
            }
        });

        botonValidar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/validar.png"))); // NOI18N
        botonValidar.setText("Validar");
        botonValidar.setEnabled(false);
        botonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonValidarActionPerformed(evt);
            }
        });

        jXLabel12.setText("Ubicacion");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pasillo 1", "Pasillo 2", "Pasillo 3", "Pasillo 4" }));

        jXButton1.setText("Mostrar Grafica 3D");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Segmento Del Estante 1", "Segmento Del Estante 2", "Segmento Del Estante 3", "Segmento Del Estante 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estante 1A", "Estante 2B", "Estante 3C", "Estante 4D" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sector A", "Sector B", "Sector C", "Sector D" }));

        javax.swing.GroupLayout jLayeredPaneDatosProductosLayout = new javax.swing.GroupLayout(jLayeredPaneDatosProductos);
        jLayeredPaneDatosProductos.setLayout(jLayeredPaneDatosProductosLayout);
        jLayeredPaneDatosProductosLayout.setHorizontalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonValidar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNroBulto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCantidadSugeridad, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, 0, 71, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, 0, 83, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, 0, 159, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPaneDatosProductosLayout.setVerticalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jXLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCantidadSugeridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jXLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox2))
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox3))
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox4))
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNroBulto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLayeredPaneDatosProductos.setLayer(txtDescripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCantidadSugeridad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(labelReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtMarca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtNroBulto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonLimpiarAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonValidar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jComboBox4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jComboBox3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jComboBox2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane5.setAutoscrolls(true);

        jTDetalleRegistroDistribuidora.setAutoCreateRowSorter(true);
        jTDetalleRegistroDistribuidora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTDetalleRegistroDistribuidora.setToolTipText("Para Eliminar Precione La tecla \"Supr\"");
        jTDetalleRegistroDistribuidora.setCellSelectionEnabled(true);
        jTDetalleRegistroDistribuidora.setMinimumSize(new java.awt.Dimension(60, 220));
        jTDetalleRegistroDistribuidora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDetalleRegistroDistribuidoraKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jTDetalleRegistroDistribuidora);

        jButtonGuardarConteo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/database_save.png"))); // NOI18N
        jButtonGuardarConteo.setText("Guardar");
        jButtonGuardarConteo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonGuardarConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarConteoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneProductosLayout = new javax.swing.GroupLayout(jLayeredPaneProductos);
        jLayeredPaneProductos.setLayout(jLayeredPaneProductosLayout);
        jLayeredPaneProductosLayout.setHorizontalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5)
                    .addComponent(jLayeredPaneBuscarProducto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPaneDatosProductos, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(27, 27, 27))
            .addGroup(jLayeredPaneProductosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonGuardarConteo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneProductosLayout.setVerticalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneProductosLayout.createSequentialGroup()
                .addComponent(jLayeredPaneBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneDatosProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonGuardarConteo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPaneProductos.setLayer(jLayeredPaneBuscarProducto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jLayeredPaneDatosProductos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jButtonGuardarConteo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane4.setViewportView(jLayeredPaneProductos);

        busy.setText("GUARDANDO!!!");
        busy.setEnabled(false);
        busy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jLayeredPanePrincipalLayout = new javax.swing.GroupLayout(jLayeredPanePrincipal);
        jLayeredPanePrincipal.setLayout(jLayeredPanePrincipalLayout);
        jLayeredPanePrincipalLayout.setHorizontalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                        .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                                .addComponent(busy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jLayeredPanePrincipalLayout.setVerticalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPanePrincipal.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(busy, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane2.setViewportView(jLayeredPanePrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 851, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonConfirmarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarFacturaActionPerformed

        try {

//            this.inventarioTienda = (List<InventarioTienda>) (InventarioTienda) this.resultListInventarioTienda;
//            for (List listaInventarioTienda : resultListInventarioTienda) {
//                System.err.println("Los datos son : " + listaInventarioTienda);
//            }
            // this.jLayeredPaneBuscarProducto.setEnabled(true)
            String hql = "FROM EntradaProveedor e WHERE  estatus='Pendiente' and e.idFactura =" + fa.getIdFactura();
            //  List resultListProEP = ObjectModelDAO.getResultQuery(sql);
            // String  hql =
            this.listaEP = ObjectModelDAO.getResultQuery(hql);
            listaDetalleAux = listaEP;
            this.comboBoxTipoBusqueda.setEnabled(true);
            this.txtBusqueda.setEnabled(true);
            this.txtBusqueda.requestFocus();
            this.jXButtonBuscar.setEnabled(true);
            this.botonListarProductosInventariTienda.setEnabled(true);
            this.jButtonListarFacturas.setEnabled(false);
            this.almacenActual.setIdAlmacen(1);
            this.comboBoxUsuarios.setEnabled(false);
            this.comboBoxAlmacen.setEnabled(false);
            this.botonConfirmarFactura.setEnabled(false);
            this.botonCancelarTodoDesdeFActura.setEnabled(true);
        } catch (Exception e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);

        }

//            this.jPanelProductos.setEnabled(true);
//            this.jButtonListarProductos.setEnabled(true);
//            this.txtBucarProducto.setEnabled(true);
//            this.jButtonBuscarProducto.setEnabled(true);
//            this.jButtonConfirmarFactura.setEnabled(false);

    }//GEN-LAST:event_botonConfirmarFacturaActionPerformed

    private void comboBoxAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAlmacenActionPerformed


    }//GEN-LAST:event_comboBoxAlmacenActionPerformed

    private void botonListarProductosInventariTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarProductosInventariTiendaActionPerformed

        try {
            JDListaProductosEntradaProveedor jdProductosEP
                    = new JDListaProductosEntradaProveedor(null, true,
                            this.listaEP);
            //(List<EntradaProveedor>) fa.getEntradaProveedorCollection());

            jdProductosEP.setLocationRelativeTo(null);
            jdProductosEP.setVisible(true);

            if (jdProductosEP.proEP == null) {
                JOptionPane.showMessageDialog(this, "No ha Seleccioado Producto");
            } else {
                this.proEP = jdProductosEP.proEP;
                //  this.proEP = (EntradaProveedor) jdProductosEP.proEP;
                //****************AQUI Dierecciona los valores****************

                this.txtCodigo.setText(proEP.getIdProducto().getIdProducto().toString());
                this.txtCodigo.setEnabled(true);
                this.txtDescripcion.setText(proEP.getIdProducto().getDescripcion());
                this.txtDescripcion.setEnabled(true);
                this.txtReferencia.setText(proEP.getIdProducto().getReferenciaProducto());
                this.txtReferencia.setEnabled(true);
                this.txtMarca.setText(proEP.getIdProducto().getIdMarca().getNombre());
                this.txtMarca.setEnabled(true);
                Integer cant_debe = proEP.getCantidadProducto() * proEP.getCantidadSet();
                this.txtCantidadSugeridad.setText(cant_debe.toString());
                this.txtCantidadSugeridad.setEnabled(true);
                this.botonLimpiarAgregar.setEnabled(true);
                this.txtCantidad.setEnabled(true);
                this.txtCantidad.requestFocus();
                this.botonValidar.setEnabled(true);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar Lista de Facturas" + ex);
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, ex);

        }


    }//GEN-LAST:event_botonListarProductosInventariTiendaActionPerformed

    private void jXButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonBuscarActionPerformed

        boolean encontrado = true;
        try {

            if ("".equals(this.txtBusqueda.getText())) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Atributo de Busqueda Por Favor!!!");
            } else {
                int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
                List<EntradaProveedor> listaProductos = this.listaEP;
                switch (pos) {
                    case 0:
                        int codigoSKU = Integer.parseInt(this.txtBusqueda.getText());
                        for (EntradaProveedor lista : listaProductos) {

                            if (lista.getIdProducto().getIdProducto().equals(codigoSKU)) {
                                //JOptionPane.showConfirmDialog(this, " EL CODIGO SKU ES CORRECTO");
                                proEP = lista;
                                // this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getIdProducto().getIdProducto().toString());
                                this.txtCodigo.setEnabled(true);
                                this.txtReferencia.setText(lista.getIdProducto().getReferenciaProducto());
                                this.txtReferencia.setEnabled(true);
                                this.txtDescripcion.setText(lista.getIdProducto().getDescripcion());
                                this.txtDescripcion.setEnabled(true);
                                this.txtMarca.setText(lista.getIdProducto().getIdMarca().getNombre());
                                this.txtMarca.setEnabled(true);
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);

                                Integer cant_debe = proEP.getCantidadProducto() * proEP.getCantidadSet();
                                this.txtCantidadSugeridad.setText(cant_debe.toString());
                                this.txtCantidadSugeridad.setEnabled(true);

                                this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);

                            } else {
                                encontrado = false;
                            }

                        }
                        break;
                    case 1:
                        String referencia = this.txtBusqueda.getText();
                        for (EntradaProveedor lista : listaProductos) {

                            if (lista.getIdProducto().getReferenciaProducto().equalsIgnoreCase(referencia)) {
                                //JOptionPane.showConfirmDialog(this, " LA REFERENCIA ES CORRECTA");
                                proEP = lista;
//                        this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getIdProducto().getIdProducto().toString());
                                this.txtReferencia.setText(lista.getIdProducto().getReferenciaProducto());
                                this.txtDescripcion.setText(lista.getIdProducto().getDescripcion());
                                this.txtMarca.setText(lista.getIdProducto().getIdMarca().getNombre());

                                Integer cant_debe = proEP.getCantidadProducto() * proEP.getCantidadSet();
                                this.txtCantidadSugeridad.setText(cant_debe.toString());
                                this.txtCantidadSugeridad.setEnabled(true);

                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);
                            } else {
                                encontrado = false;
                            }

                        }
                        break;

                    case 2:
                        String descripcion = this.txtBusqueda.getText();
                        for (EntradaProveedor lista : listaProductos) {

                            if (lista.getIdProducto().getDescripcion().equalsIgnoreCase(descripcion)) {
                                // JOptionPane.showConfirmDialog(this, " LA DESCRIPCION ES CORRECTA");
                                proEP = lista;
//                        this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getIdProducto().getIdProducto().toString());
                                this.txtReferencia.setText(lista.getIdProducto().getReferenciaProducto());
                                this.txtDescripcion.setText(lista.getIdProducto().getDescripcion());
                                this.txtMarca.setText(lista.getIdProducto().getIdMarca().getNombre());

                                Integer cant_debe = proEP.getCantidadProducto() * proEP.getCantidadSet();
                                this.txtCantidadSugeridad.setText(cant_debe.toString());
                                this.txtCantidadSugeridad.setEnabled(true);

                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);
                            } else {
                                encontrado = false;
                            }

                        }
                        break;

                }//Finaliza Case
                if (encontrado == false) {
                    JOptionPane.showMessageDialog(null, "¡¡¡La Busqueda No Arrojo Ningun Resultado!!!\n"
                            + "Verifique los Datos de Buqueda y Vuelva a Intentarlo.");
                }
            }//Finaliza if

        } catch (HeadlessException | NumberFormatException e) {

            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Seleccione El Tipo de Busqueda Correcto!!!");
            System.err.println("ERROR en la Busqueda : " + e);
        }

    }//GEN-LAST:event_jXButtonBuscarActionPerformed

    private void jButtonGuardarConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarConteoActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                jButtonGuardarConteo.setEnabled(false);
                busy.setEnabled(true);
                busy.setVisible(true);
                busy.setBusy(true);

                Float total = 0f;

                try {
                    ConteoMercanciaEntrada cab = new ConteoMercanciaEntrada(almacenActual, fa, user);
                    Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
                    if (id_creado_cabecera != -1) {//se creo

                        for (DetalleRegistro dr : listaDetalle) {

                            //Crear Objeto PK_DeatllesConteo
                            ConteoMercanciaEntradaDetallesPK detallePK = new ConteoMercanciaEntradaDetallesPK(
                                    dr.getEp().getIdProducto().getIdProducto(),
                                    id_creado_cabecera);

                            //Crear Objeto DeatllesConteo
                            ConteoMercanciaEntradaDetalles detalle = new ConteoMercanciaEntradaDetalles(
                                    detallePK,
                                    dr.getConteoFaltante(),
                                    dr.getTotalFaltante(),
                                    dr.getBulto(),
                                    dr.getCantidad(),
                                    cab,
                                    dr.getEp().getIdProducto()
                            );

                            //Guardando Cabecera y Detalles de Toma Fisica 
                            try {
                                Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                                if (id_creado_detalle instanceof ConteoMercanciaEntradaDetallesPK
                                        && ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle) == null) {
                                    System.err.println("ERROR ó Exitos AL CREAR REGISTRO DETALLES "
                                            + ((ConteoMercanciaEntradaDetallesPK) id_creado_detalle).toString());
                                } else {//se creo
                                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");

                                }

                            } catch (Exception e) {
                                System.err.println("ERROR CON PK_Detalle : " + e);
                            }

                            //Guardando Inventario
                            try {
                                //Guaradar InventarioPK
                                System.err.println("Creando PK inventario");
                                InventarioTiendaPK inventarioPK = new InventarioTiendaPK(
                                        dr.getEp().getIdProducto().getIdProducto(),
                                        almacenActual.getIdAlmacen()
                                );
                                //Guaradar Inventario
                                InventarioTienda id_in = ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class);
                                System.err.println("ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class) es: " + id_in);
                                if (id_in == null) {
                                    System.err.println("CREANDO Inventartio Tienda IF(Guaradar Inventario) id_in is null");
                                    id_in = new InventarioTienda(
                                            inventarioPK,
                                            dr.getCantidad(),
                                            almacenActual,
                                            dr.getEp().getIdProducto()
                                    );
                                    id_in.setPrecioSinDescuento(dr.getEp().getIdProducto().getPrecioOriginal());
                                    id_in.setPrecioConDescuento(dr.getEp().getIdProducto().getPrecioOriginal());
                                    id_in.setDescuento(0);

                                    total += dr.getCantidad() * dr.getEp().getIdProducto().getPrecioOriginal();
                                    Object id_creado_inventario = ObjectModelDAO.saveObject(id_in);
                                    if (id_creado_inventario instanceof InventarioTiendaPK
                                            && ((InventarioTiendaPK) id_creado_inventario) == null) {
                                        System.err.println("1 ERROR!!! REGISTRANDO DATOS EN INVENTARIOPK");
                                    } else {
                                        System.err.println("0 Exito¡¡¡ REGISTRANDO DATOS EN INVENTARIOPK");
                                    }
                                } else {
                                    // id_in.setPrecio(dr.ep.getIdProducto().getPrecioOriginal());
                                    //id_in.setDescuento(0f);
                                    id_in.setCantidad(id_in.getCantidad() + dr.getCantidad());
                                    ObjectModelDAO.updateObject(id_in);
                                    total += dr.getCantidad() * id_in.getPrecioSinDescuento();
                                    System.err.println("Actualizando Inventario de Producto Existente");
                                }
                            } catch (Exception e) {
                                Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
                                JOptionPane.showMessageDialog(null, "Por Favor, Vuelva a Intentar Guardar con Datos Correctos del Inventario!!!");
                                System.err.println("ERROR GUARDANDO EN INVENTARIO : " + e);
                            }

                            ObjectModelDAO.updateObject(dr.getEp());
                        }

                    }
                    cab.setTotalConteo(total);
                    ObjectModelDAO.updateObject(cab);
                    //busy
                    busy.setEnabled(false);
                    busy.setVisible(false);
                    busy.setBusy(false);

                    //Validar y Verificar queLa factura NO Cambie el 
                    //Mensaje Registro Guardado
                    int respuesta = JOptionPane.showConfirmDialog(null, "El Registro se Guardo Exitosamente...!!! \n ¿Desea Agregar Otra Factura?",
                            "COMPROBACION DE REGISTROS", JOptionPane.YES_NO_OPTION);

                    if (respuesta == JOptionPane.YES_OPTION) {

                        jButtonGuardarConteo.setEnabled(true);

                        //Limpiar Tabla y Lista
                        listaDetalle.clear();
                        jTDetalleRegistroDistribuidora.removeAll();
                        modeloTablaTomaFisicaInventarioDistribuidora.fireTableDataChanged();

                        //Desabilitar Controles
                        txtCantidad.setEnabled(false);
                        botonValidar.setEnabled(false);
                        botonAgregar.setEnabled(false);
                        botonLimpiarAgregar.setEnabled(false);
                        comboBoxTipoBusqueda.setEnabled(false);
                        txtBusqueda.setEnabled(false);
                        jXButtonBuscar.setEnabled(false);
                        botonListarProductosInventariTienda.setEnabled(false);
                        jButtonListarFacturas.setEnabled(false);

                        //Destruir Objetos
                        listaEP.clear();
                        proEP = null;
                        Conteofaltante = 0;
                        posUs = -1;
                        posTi = -1;
                        deReg = null;

                        //Habilitar COntrol de Factura
                        jButtonListarFacturas.setEnabled(true);
                        botonConfirmarFactura.setEnabled(true);

                        //Limpiar texto de Factura
                        txtFactura.setText("");
                        txtEmitidoPor.setText("");
                        txtFechaFactura.setText("");

                        //Limpiar Campos de Texto
                        txtCodigo.setText("");
                        txtDescripcion.setText("");
                        txtReferencia.setText("");
                        txtMarca.setText("");
                        txtCantidadSugeridad.setText("");
                        txtCantidad.setText("");
                        txtNroBulto.setText("");
                    }
                    if (respuesta == JOptionPane.NO_OPTION) {
                        JOptionPane.showMessageDialog(null, "Listo Para Eliminar Panel");
                    }

                } catch (Exception ex) {
                    Logger.getLogger(PtomaFisica.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Por Favor, Vuelva a Intentar Guardar con Datos Correctos!!!");
                    System.err.println("Excepcion en Guardar Registro : " + ex);

                } catch (Throwable ex) {
                    Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Por Favor, Vuelva a Intentar Guardar con Datos Correctos!!!");
                    System.err.println("ERROR ó Excepcion en Guardar Registro : " + ex);
                }

            }
        };
        hilo.start();

    }//GEN-LAST:event_jButtonGuardarConteoActionPerformed

    private void jButtonListarFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarFacturasActionPerformed

        Thread hilo = new Thread() {

            @Override
            public void run() {
                busy.setEnabled(true);
                busy.setVisible(true);
                busy.setBusy(true);
                try {
                    JDFacturasPendientes jdFactura = new JDFacturasPendientes(null, true);
                    jdFactura.setLocationRelativeTo(null);
                    jdFactura.setVisible(true);
                    if (jdFactura.factura == null) {
                        JOptionPane.showMessageDialog(null, "no ha Seleccionado Facturas");
                    } else {
                        fa = jdFactura.factura;
                        // listaEP = (List<EntradaProveedor>) fa.getEntradaProveedorCollection();
                        txtFactura.setEnabled(true);
                        Integer nf = fa.getNroFactura();
                        txtFactura.setText(nf.toString());
                        txtEmitidoPor.setEnabled(true);
                        txtEmitidoPor.setText(fa.getRecibidoPor());
                        txtFechaFactura.setEnabled(true);
                        txtFechaFactura.setText(fa.getFechaEmision().toString());
                        botonConfirmarFactura.setEnabled(true);

                    }
                    //busy
                    busy.setEnabled(false);
                    busy.setVisible(false);
                    busy.setBusy(false);

                } catch (Exception ex) {

                    Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "No se Encontraron Listas Para Mostrar de Facturas Pendientes");
                    System.err.println("ERROR ó Excepcion en Guardar Registro : " + ex);
                }
            }
        };
        hilo.start();

        //    ListarFacturas();
    }//GEN-LAST:event_jButtonListarFacturasActionPerformed

    private void txtFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacturaActionPerformed
        //   ValidarFactura();
    }//GEN-LAST:event_txtFacturaActionPerformed

    private void jTDetalleRegistroDistribuidoraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDetalleRegistroDistribuidoraKeyReleased

        try {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                if (JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?",
                        "Eliminar registro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    //se elimina
                    int i;
                    int[] selection = jTDetalleRegistroDistribuidora.getSelectedRows();
                    for (i = 0; i < selection.length; i++) {
                        selection[i] = jTDetalleRegistroDistribuidora.convertRowIndexToModel(selection[i]);
                    }
//                    EntradaProveedor proEPaux2 = (EntradaProveedor) jTDetalleRegistroDistribuidora.getValueAt(selection[0], selection[selection.length - 1]);
                    this.listaEP.add(modeloTablaTomaFisicaInventarioDistribuidora.getProd().getEp());
                    this.listaDetalle.remove(selection[i - 1]);
                    modeloTablaTomaFisicaInventarioDistribuidora.fireTableRowsDeleted(selection[0], selection[selection.length - 1]);

                }
            }
        } catch (Exception e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Seleccione Una Celda Validad Para Eliminar");
            System.err.println("ERROR ó Excepcion Eliminando Celda de La Tabla : " + e);
        }
    }//GEN-LAST:event_jTDetalleRegistroDistribuidoraKeyReleased

    private void botonCancelarTodoDesdeFActuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarTodoDesdeFActuraActionPerformed

        try {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro Desea Cancelar?", "Confirmacion", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                //Panel y Controles de Factura
                this.jButtonListarFacturas.setEnabled(true);
                this.txtFactura.setText("");
                this.txtEmitidoPor.setText("");
                this.txtFechaFactura.setText("");
                //COntroles Panel desabilitar
                //this.jLayeredPaneBuscarProducto.setEnabled(false);
                this.comboBoxTipoBusqueda.setEnabled(false);
                this.txtBusqueda.setEnabled(false);
                this.jXButtonBuscar.setEnabled(false);
                this.botonListarProductosInventariTienda.setEnabled(false);

                //Limpiar Campos de Texto
                this.txtCodigo.setText("");
                this.txtCodigo.setEnabled(false);
                this.txtDescripcion.setText("");
                this.txtDescripcion.setEnabled(false);
                this.txtReferencia.setText("");
                this.txtReferencia.setEnabled(false);
                this.txtMarca.setText("");
                this.txtMarca.setEnabled(false);
                this.txtCantidadSugeridad.setText("");
                this.txtCantidadSugeridad.setEnabled(false);
                this.txtCantidad.setText("");
                this.txtCantidad.setEnabled(false);
                this.txtNroBulto.setText("");
                this.txtNroBulto.setEnabled(false);
                //Destruir Objetos
                listaEP.clear();
                proEP = null;

                Conteofaltante = 0;
                posUs = -1;
                posTi = -1;
                deReg = null;
                //COntroles Conteo
                this.botonValidar.setEnabled(false);
                this.botonAgregar.setEnabled(false);
                this.botonLimpiarAgregar.setEnabled(false);

            }
        } catch (Exception e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Seleccione Una Factura Valida Para Continuar.!!!");
            System.err.println("ERROR ó Excepcion Boton Reiniciar Todo Desde FActura : " + e);
        }


    }//GEN-LAST:event_botonCancelarTodoDesdeFActuraActionPerformed

    private void comboBoxTipoBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxTipoBusquedaItemStateChanged

        this.txtBusqueda.setText("");
        this.txtBusqueda.requestFocus();

    }//GEN-LAST:event_comboBoxTipoBusquedaItemStateChanged

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped

        int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
        switch (pos) {
            case 0:
                char car = evt.getKeyChar();
                String cadena = "_{}[¨*´!°#$%&/()=?;;><qwertyuiopñlkjhgfdsazxcvbnm´`¡'<º"
                        + "¨_:´:_*^`QWERTYUIOPÑLKJHGFDSAZXCVBNM´ç`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
                char s = '"';
                for (int i = 0; i < cadena.length(); i++) {
                    if (car == cadena.charAt(i) || car == s) {
                        JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Valores Numerico Para Este Tipo de Busqueda|n"
                                + "ó Seleccione El Tipo de Busqueda Correcta.");
                        evt.consume();
                    }
                }
            //  break;

        }
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void botonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonValidarActionPerformed

        try {
            if ("".equals(this.txtCantidad.getText())
                || Integer.parseInt(this.txtCantidad.getText()) == 0 //|| (this.proEP.getCantidadProducto() * this.proEP.getCantidadSet()) <= (Math.abs(Integer.parseInt(this.txtCantidad.getText())))
            ) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Cantidad Por Favor!!!");
            } else {
                int total = this.proEP.getCantidadProducto() * this.proEP.getCantidadSet();

                if (total == Integer.parseInt(this.txtCantidad.getText())) {
                    this.txtNroBulto.setEnabled(true);
                    this.txtNroBulto.requestFocus();
                    this.botonAgregar.setEnabled(true);

                } else {

                    int respuesta = JOptionPane.showConfirmDialog(null, "LA CANTIDAD DEL PRODUCTO ES IMCOMPLETA...\n La Cantidad Correcta Deberia Ser :" + total + "\n ¿Desea Continuar de Igual Manera?",
                        "COMPROBACION DE CANTIDADES", JOptionPane.YES_NO_OPTION);

                    if (respuesta == JOptionPane.YES_OPTION) {
                        this.txtNroBulto.setEnabled(true);
                        this.txtNroBulto.requestFocus();
                        this.botonAgregar.setEnabled(true);
                        this.botonLimpiarAgregar.setEnabled(true);
                    }
                    if (respuesta == JOptionPane.NO_OPTION) {
                        this.txtCantidad.setText("");
                        this.txtCantidad.requestFocus();
                    }
                }
            }
        } catch (NumberFormatException | HeadlessException e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Datos Validos Para Continuar.!!!");
            System.err.println("ERROR ó Excepcion Boton Validar Cantidad : " + e);

        }
    }//GEN-LAST:event_botonValidarActionPerformed

    private void botonLimpiarAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarAgregarActionPerformed

        try {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro Desea Cancelar?", "Confirmacion", JOptionPane.YES_NO_OPTION);

            if (respuesta == JOptionPane.YES_OPTION) {
                //Limpiar Campos de Texto
                this.txtCodigo.setText("");
                this.txtDescripcion.setText("");
                this.txtReferencia.setText("");
                this.txtMarca.setText("");
                this.txtCantidadSugeridad.setText("");
                this.txtCantidad.setText("");
                this.txtNroBulto.setText("");
            }
        } catch (Exception e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Datos Validos Para Continuar.!!!");
            System.err.println("ERROR ó Excepcion Boton Limpiar Cantidades y Datos de Producto : " + e);

        }
    }//GEN-LAST:event_botonLimpiarAgregarActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped

        char car = evt.getKeyChar();
        String cadena = ",-_{}[¨*+´!°#$%&/()=?¡.;;><qwertyuiopñlkjhgfdsazxcvbnm,.-ç´+`¡'<º"
        + "¨_:´:_.-*^+`QWERTYUIOPÑLKJHGFDSAZXCVBNM,.-´ç+`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
        char s = '"';
        for (int i = 0; i < cadena.length(); i++) {
            if (car == cadena.charAt(i) || car == s) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed

        try {
            int total = this.proEP.getCantidadProducto() * this.proEP.getCantidadSet();
            if (total == Integer.parseInt(this.txtCantidad.getText())) {
                this.txtNroBulto.setEnabled(true);
                this.txtNroBulto.requestFocus();
                this.botonAgregar.setEnabled(true);
                this.botonLimpiarAgregar.setEnabled(true);
            } else {

                int respuesta = JOptionPane.showConfirmDialog(null, "LA CANTIDAD DEL PRODUCTO ES IMCOMPLETA...\n La Cantidad Correcta Deberia Ser :" + total + "\n ¿Desea Continuar de Igual Manera?",
                    "COMPROBACION DE CANTIDADES", JOptionPane.YES_NO_OPTION);

                if (respuesta == JOptionPane.YES_OPTION) {
                    this.txtNroBulto.setEnabled(true);
                    this.txtNroBulto.requestFocus();
                    this.botonAgregar.setEnabled(true);
                    this.botonLimpiarAgregar.setEnabled(true);
                }
                if (respuesta == JOptionPane.NO_OPTION) {
                    this.txtCantidad.setText("");
                    this.txtCantidad.requestFocus();
                }

            }
        } catch (NumberFormatException | HeadlessException e) {
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Datos Validos Para Continuar.!!!");
            System.err.println("ERROR ó Excepcion Boton Validar Cantidad : " + e);

        }

    }//GEN-LAST:event_txtCantidadActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed

        try {
            if ("".equals(this.txtCantidad.getText())
                || "".equals(this.txtNroBulto.getText())
                || "".equals(this.txtReferencia.getText())
                || "".equals(this.txtMarca.getText())
                || "".equals(this.txtCantidadSugeridad.getText())
                || proEP == null) {
                JOptionPane.showMessageDialog(null, "Posibles Errores: \n"
                    + "1: Las Datos Estan Vacio\n "
                    + "2: No existe el Producto\n");
            } else {
                int total = this.proEP.getCantidadProducto() * this.proEP.getCantidadSet();

                deReg = new DetalleRegistro();
                deReg.setEp(proEP);

                deReg.setCantidad(Integer.parseInt(this.txtCantidad.getText()));
                deReg.setBulto(Integer.parseInt(this.txtNroBulto.getText()));
                deReg.setRenglon(renglon++);
                Conteofaltante = Integer.parseInt(this.txtCantidad.getText());
                //negativo:llego menos de lo que deberia
                //positivo:llego mas de lo que deberia
                Conteofaltante -= total;
                deReg.setConteoFaltante(Conteofaltante);
                deReg.setTotalFaltante(Math.abs(Conteofaltante) * proEP.getIdProducto().getPrecioOriginal());

                deReg.getEp().setEstatus("Aprobado");

                listaDetalle.add(deReg);

                modeloTablaTomaFisicaInventarioDistribuidora.setListaDetalleResgistro(listaDetalle);
                modeloTablaTomaFisicaInventarioDistribuidora.fireTableDataChanged();
                modeloTablaTomaFisicaInventarioDistribuidora.setProd(deReg);

                //Respaldo lista Producto de Entrada Proveedor
                //                this.proEPaux = proEP;
                //                this.proEPaux.setEstatus("Pendiente");
                //                listaDetalleAux.add(proEPaux);
                this.txtReferencia.setText("");
                this.txtMarca.setText("");
                this.txtCantidadSugeridad.setText("");
                this.txtCodigo.setText("");
                this.txtDescripcion.setText("");
                this.txtCantidad.setText("");
                this.txtNroBulto.setText("");
                this.txtNroBulto.setEnabled(false);
                this.txtCodigo.requestFocus();

                //Remover de Lista Actual Producto Agregago
                //this.proEPaux = proEP;
                this.listaEP.remove(proEP);
            }

        } catch (HeadlessException | NumberFormatException ex) {

            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Los Datos Correcto Para Agragar!!!");
            System.err.println("ERROR AGREGARNDO PRODUCTO EN LA TABLA Y LISTA : " + ex);

        }

    }//GEN-LAST:event_botonAgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton botonAgregar;
    private org.jdesktop.swingx.JXButton botonCancelarTodoDesdeFActura;
    private org.jdesktop.swingx.JXButton botonConfirmarFactura;
    private org.jdesktop.swingx.JXButton botonLimpiarAgregar;
    private org.jdesktop.swingx.JXButton botonListarProductosInventariTienda;
    private org.jdesktop.swingx.JXButton botonValidar;
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JComboBox comboBoxAlmacen;
    private javax.swing.JComboBox comboBoxTipoBusqueda;
    private javax.swing.JComboBox comboBoxUsuarios;
    private org.jdesktop.swingx.JXButton jButtonGuardarConteo;
    private javax.swing.JButton jButtonListarFacturas;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPaneBuscarProducto;
    private javax.swing.JLayeredPane jLayeredPaneDatosProductos;
    private javax.swing.JLayeredPane jLayeredPanePrincipal;
    private javax.swing.JLayeredPane jLayeredPaneProductos;
    private javax.swing.JLayeredPane jLayeredPaneTienda;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTDetalleRegistroDistribuidora;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButtonBuscar;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel12;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private org.jdesktop.swingx.JXLabel labelReferencia;
    private org.jdesktop.swingx.JXTextField txtBusqueda;
    private org.jdesktop.swingx.JXTextField txtCantidad;
    private org.jdesktop.swingx.JXTextField txtCantidadSugeridad;
    private org.jdesktop.swingx.JXTextField txtCodigo;
    private org.jdesktop.swingx.JXTextField txtDescripcion;
    private javax.swing.JTextField txtEmitidoPor;
    private javax.swing.JTextField txtFactura;
    private org.jdesktop.swingx.JXTextField txtFechaFactura;
    private org.jdesktop.swingx.JXTextField txtMarca;
    private org.jdesktop.swingx.JXTextField txtNroBulto;
    private org.jdesktop.swingx.JXTextField txtReferencia;
    // End of variables declaration//GEN-END:variables

}
