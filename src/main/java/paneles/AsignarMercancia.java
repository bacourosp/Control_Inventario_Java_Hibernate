/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import almacen.DetalleRegistro;
import almacen.ModeloTablaDetalleRegistroAsignacion;
import hibernate.anotaciones.util.ObjectModelDAO;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import modelos.Almacen;
import modelos.InventarioTienda;
import modelos.InventarioTiendaPK;
import modelos.SalidaParaTienda;
import modelos.SalidaParaTiendaDetalle;
import modelos.SalidaParaTiendaDetallePK;
import modelos.Usuario;
import org.hibernate.Query;
import static paneles.JFInicioSecionMiyake.resultListUsuarios;

/**
 *
 * @author Pablo
 */
public class AsignarMercancia extends javax.swing.JPanel {
    
    Usuario ususrioActual = null;
    Usuario user = JFInicioSecionMiyake.us1;
    Almacen almacenHasta = null;
    Almacen almacenDesde = null;
    List resultListAlmacen = null;
    List resultListInventarioTienda = null;
    //List inventarioTiendaHasta = null;
    private int renglon = 1;
    
    InventarioTienda inv = null;
    InventarioTienda invAux = null;
    int posUs = -1;
    int posTi = -1;
    int posTi2 = -1;
    private DetalleRegistro deReg;
    List<DetalleRegistro> listaDetalle = new ArrayList<>();
    ModeloTablaDetalleRegistroAsignacion modeloTablaAsignacion = new ModeloTablaDetalleRegistroAsignacion();

    /**
     * Creates new form NewJPanel
     */
    public AsignarMercancia() {
        initComponents();
        //ComboBoxAlmacenes
        this.TablaDetalleRegistrosAsignacionMercancia1.setModel(modeloTablaAsignacion);
        String sql = "FROM Almacen a order by a.idAlmacen asc";
        resultListAlmacen = ObjectModelDAO.getResultQuery(sql);
        comboBoxAlmacenHasta.removeAllItems();
        
        comboBoxAlmacenDesde.removeAllItems();

        // this.comboBoxAlmacenDesde.addItem("Selecionar");
        for (Object object : resultListAlmacen) {
            Almacen a = (Almacen) object;
            
            comboBoxAlmacenHasta.addItem(a.getNombre() + " TLF:" + a.getTelefono1());
            comboBoxAlmacenDesde.addItem(a.getNombre() + " TLF:" + a.getTelefono1());
        }
//        posTi = this.comboBoxAlmacen.getSelectedIndex();
//        almacenHasta = (Almacen) resultListAlmacen.get(posTi);
//        System.err.println("Index Sleccion podTi, lod  dstpd Son : " + almacenHasta.getNombre() );
//        Almacen al = (Almacen) this.comboBoxAlmacen.getSelectedItem();
//        System.err.println("Almacen Seleccionado Objeto : " + al.getNombre()+al.getIdAlmacen() );
//        
        //Usuarios
        List<List> resultListUsuarios = FventanaIncial.listaUsuarioMain;
        comboBoxUsuarios.removeAllItems();
        for (Object object : resultListUsuarios) {
            Usuario u = (Usuario) object;
            comboBoxUsuarios.addItem(u.getNombre() + " :" + u.getDescripcion());
            
        }
        
        this.comboBoxAlmacenDesde.setSelectedIndex(-1);
        this.comboBoxAlmacenHasta.setSelectedIndex(-1);
        this.comboBoxUsuarios.setSelectedIndex(-1);
        this.busy.setVisible(false);
        this.busy1.setVisible(false);
        
    }
    
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new AsignarMercancia().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jLayeredPanePrincipal = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLayeredPaneTienda = new javax.swing.JLayeredPane();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXButtonConfirmar = new org.jdesktop.swingx.JXButton();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        comboBoxAlmacenHasta = new javax.swing.JComboBox();
        comboBoxUsuarios = new javax.swing.JComboBox();
        jXButtonReiniciar = new org.jdesktop.swingx.JXButton();
        comboBoxAlmacenDesde = new javax.swing.JComboBox();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLayeredPaneProductos = new javax.swing.JLayeredPane();
        jLayeredPaneBuscarProducto = new javax.swing.JLayeredPane();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        txtBusqueda = new org.jdesktop.swingx.JXTextField();
        jXButtonBuscar = new org.jdesktop.swingx.JXButton();
        comboBoxTipoBusqueda = new javax.swing.JComboBox();
        botonListarProductosInventariTienda = new org.jdesktop.swingx.JXButton();
        jLayeredPaneDatosProductos = new javax.swing.JLayeredPane();
        txtDescripcion = new org.jdesktop.swingx.JXTextField();
        txtExistencia = new org.jdesktop.swingx.JXTextField();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        txtReferencia = new org.jdesktop.swingx.JXTextField();
        txtCodigo = new org.jdesktop.swingx.JXTextField();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        labelReferencia = new org.jdesktop.swingx.JXLabel();
        botonAgregar = new org.jdesktop.swingx.JXButton();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        txtMarca = new org.jdesktop.swingx.JXTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        txtCantidad = new org.jdesktop.swingx.JXTextField();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtNroBulto = new org.jdesktop.swingx.JXTextField();
        botonLimpiarAgregar = new org.jdesktop.swingx.JXButton();
        botonValidar = new org.jdesktop.swingx.JXButton();
        jXButtonAsignarMercancia = new org.jdesktop.swingx.JXButton();
        jXButton1 = new org.jdesktop.swingx.JXButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaDetalleRegistrosAsignacionMercancia1 = new javax.swing.JTable();
        busy1 = new org.jdesktop.swingx.JXBusyLabel();
        busy = new org.jdesktop.swingx.JXBusyLabel();

        setAutoscrolls(true);

        jScrollPane2.setAutoscrolls(true);

        jLayeredPaneTienda.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar Datos Para Asignar Mercancia"));
        jLayeredPaneTienda.setPreferredSize(new java.awt.Dimension(610, 140));
        jLayeredPaneTienda.setRequestFocusEnabled(false);
        jLayeredPaneTienda.setVerifyInputWhenFocusTarget(false);

        jXLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/responsable1.png"))); // NOI18N
        jXLabel2.setText("Responsable");

        jXButtonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/conect.png"))); // NOI18N
        jXButtonConfirmar.setText("Confirmar");
        jXButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonConfirmarActionPerformed(evt);
            }
        });

        jXLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/hasta1.png"))); // NOI18N
        jXLabel1.setText("Hasta Tienda");

        comboBoxAlmacenHasta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxAlmacenHasta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxAlmacenHastaMouseClicked(evt);
            }
        });

        comboBoxUsuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxUsuariosMouseClicked(evt);
            }
        });

        jXButtonReiniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/reiniciar.png"))); // NOI18N
        jXButtonReiniciar.setText("Reiniciar");
        jXButtonReiniciar.setEnabled(false);
        jXButtonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonReiniciarActionPerformed(evt);
            }
        });

        comboBoxAlmacenDesde.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxAlmacenDesde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxAlmacenDesdeMouseClicked(evt);
            }
        });

        jXLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/hasta.png"))); // NOI18N
        jXLabel10.setText("Desde Tienda");

        javax.swing.GroupLayout jLayeredPaneTiendaLayout = new javax.swing.GroupLayout(jLayeredPaneTienda);
        jLayeredPaneTienda.setLayout(jLayeredPaneTiendaLayout);
        jLayeredPaneTiendaLayout.setHorizontalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addComponent(comboBoxUsuarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXButtonConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(jXButtonReiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(172, 172, 172))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboBoxAlmacenHasta, javax.swing.GroupLayout.Alignment.LEADING, 0, 468, Short.MAX_VALUE)
                            .addComponent(comboBoxAlmacenDesde, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))))
        );
        jLayeredPaneTiendaLayout.setVerticalGroup(
            jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneTiendaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxAlmacenDesde))
                .addGap(11, 11, 11)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxAlmacenHasta)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneTiendaLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(comboBoxUsuarios))
                    .addGroup(jLayeredPaneTiendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jXButtonConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jXButtonReiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(55, 55, 55))
        );
        jLayeredPaneTienda.setLayer(jXLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXButtonConfirmar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxAlmacenHasta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxUsuarios, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXButtonReiniciar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(comboBoxAlmacenDesde, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTienda.setLayer(jXLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane3.setViewportView(jLayeredPaneTienda);

        jLayeredPaneProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));
        jLayeredPaneProductos.setAutoscrolls(true);

        jLayeredPaneBuscarProducto.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        jXLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/tipo.png"))); // NOI18N
        jXLabel7.setText("Tipo Busqueda");

        txtBusqueda.setEnabled(false);
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        jXButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/buscar.png"))); // NOI18N
        jXButtonBuscar.setText("Buscar");
        jXButtonBuscar.setEnabled(false);
        jXButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonBuscarActionPerformed(evt);
            }
        });

        comboBoxTipoBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo SKU", "Referencia", "Descripcion" }));
        comboBoxTipoBusqueda.setEnabled(false);
        comboBoxTipoBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxTipoBusquedaItemStateChanged(evt);
            }
        });

        botonListarProductosInventariTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/productos.png"))); // NOI18N
        botonListarProductosInventariTienda.setText("Productos");
        botonListarProductosInventariTienda.setEnabled(false);
        botonListarProductosInventariTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarProductosInventariTiendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneBuscarProductoLayout = new javax.swing.GroupLayout(jLayeredPaneBuscarProducto);
        jLayeredPaneBuscarProducto.setLayout(jLayeredPaneBuscarProductoLayout);
        jLayeredPaneBuscarProductoLayout.setHorizontalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jLayeredPaneBuscarProductoLayout.setVerticalGroup(
            jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneBuscarProductoLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBoxTipoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jLayeredPaneBuscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jXButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(botonListarProductosInventariTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jLayeredPaneBuscarProducto.setLayer(jXLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(txtBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(jXButtonBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(comboBoxTipoBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneBuscarProducto.setLayer(botonListarProductosInventariTienda, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneDatosProductos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Producto"));

        txtDescripcion.setEditable(false);
        txtDescripcion.setEnabled(false);

        txtExistencia.setEnabled(false);

        jXLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/stock.png"))); // NOI18N
        jXLabel6.setText("Existencia");

        txtReferencia.setEditable(false);
        txtReferencia.setDisabledTextColor(new java.awt.Color(212, 208, 200));
        txtReferencia.setEnabled(false);

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);

        jXLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/etiquetas.png"))); // NOI18N
        jXLabel3.setText("CodigoSKU");

        jXLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/descripcion.png"))); // NOI18N
        jXLabel5.setText("Descripcion");

        labelReferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/codigo1.png"))); // NOI18N
        labelReferencia.setText("Referencia");

        botonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/agregar1.png"))); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.setEnabled(false);
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        jXLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/marca4.png"))); // NOI18N
        jXLabel4.setText("Marca");

        txtMarca.setEditable(false);
        txtMarca.setEnabled(false);

        jXLabel8.setText("Cantidad");

        txtCantidad.setEnabled(false);
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        jXLabel9.setText("Bulto");

        txtNroBulto.setEnabled(false);
        txtNroBulto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroBultoActionPerformed(evt);
            }
        });

        botonLimpiarAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/limpiar.png"))); // NOI18N
        botonLimpiarAgregar.setText("Limpiar");
        botonLimpiarAgregar.setEnabled(false);
        botonLimpiarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarAgregarActionPerformed(evt);
            }
        });

        botonValidar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/validar.png"))); // NOI18N
        botonValidar.setText("Validar");
        botonValidar.setEnabled(false);
        botonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonValidarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneDatosProductosLayout = new javax.swing.GroupLayout(jLayeredPaneDatosProductos);
        jLayeredPaneDatosProductos.setLayout(jLayeredPaneDatosProductosLayout);
        jLayeredPaneDatosProductosLayout.setHorizontalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonValidar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNroBulto, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPaneDatosProductosLayout.setVerticalGroup(
            jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneDatosProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jXLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNroBulto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonLimpiarAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonValidar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneDatosProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneDatosProductos.setLayer(txtDescripcion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtExistencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(labelReferencia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtMarca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtCantidad, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(jXLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(txtNroBulto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonLimpiarAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneDatosProductos.setLayer(botonValidar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jXButtonAsignarMercancia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_almacen/database_save.png"))); // NOI18N
        jXButtonAsignarMercancia.setText("Asignar");
        jXButtonAsignarMercancia.setEnabled(false);
        jXButtonAsignarMercancia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jXButtonAsignarMercancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButtonAsignarMercanciaActionPerformed(evt);
            }
        });

        jXButton1.setText("Cancelar");
        jXButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXButton1ActionPerformed(evt);
            }
        });

        TablaDetalleRegistrosAsignacionMercancia1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaDetalleRegistrosAsignacionMercancia1.setToolTipText("Para Eliminar Precione La tecla \"Supr\"");
        jScrollPane5.setViewportView(TablaDetalleRegistrosAsignacionMercancia1);

        busy1.setText("GUARDANDO!!!");
        busy1.setEnabled(false);
        busy1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout jLayeredPaneProductosLayout = new javax.swing.GroupLayout(jLayeredPaneProductos);
        jLayeredPaneProductos.setLayout(jLayeredPaneProductosLayout);
        jLayeredPaneProductosLayout.setHorizontalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneProductosLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(busy1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(jXButtonAsignarMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addComponent(jLayeredPaneBuscarProducto, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPaneDatosProductos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jLayeredPaneProductosLayout.setVerticalGroup(
            jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneProductosLayout.createSequentialGroup()
                .addComponent(jLayeredPaneBuscarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneDatosProductos, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(busy1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jXButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXButtonAsignarMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLayeredPaneProductos.setLayer(jLayeredPaneBuscarProducto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jLayeredPaneDatosProductos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jXButtonAsignarMercancia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jXButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneProductos.setLayer(busy1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane4.setViewportView(jLayeredPaneProductos);

        busy.setIcon(null);
        busy.setText("GUARDANDO!!!");
        busy.setEnabled(false);
        busy.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout jLayeredPanePrincipalLayout = new javax.swing.GroupLayout(jLayeredPanePrincipal);
        jLayeredPanePrincipal.setLayout(jLayeredPanePrincipalLayout);
        jLayeredPanePrincipalLayout.setHorizontalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPanePrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPanePrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPanePrincipalLayout.setVerticalGroup(
            jLayeredPanePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPanePrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(busy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPanePrincipal.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPanePrincipal.setLayer(busy, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane2.setViewportView(jLayeredPanePrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jXButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonConfirmarActionPerformed
        
        Thread hilo = new Thread() {
            
            @Override
            public void run() {
                busy.setEnabled(true);
                busy.setVisible(true);
                busy.setBusy(true);
                try {
                    posUs = comboBoxUsuarios.getSelectedIndex();
                    posTi2 = comboBoxAlmacenDesde.getSelectedIndex();
                    posTi = comboBoxAlmacenHasta.getSelectedIndex();
                    
                    if (posUs != -1 && posTi2 != -1 && posTi != -1) {
                        ususrioActual = (Usuario) resultListUsuarios.get(posUs);
                        almacenDesde = (Almacen) resultListAlmacen.get(posTi2);
                        almacenHasta = (Almacen) resultListAlmacen.get(posTi);
                        //COnstruir Consulta
                        String sql = "SELECT i FROM InventarioTienda i WHERE i.cantidad > 0 and i.inventarioTiendaPK.idAlmacen =" + almacenDesde.getIdAlmacen();
                        resultListInventarioTienda = ObjectModelDAO.getResultQuery(sql);
                        
                        for (Object listaInventarioTienda : resultListInventarioTienda) {
                            System.err.println("Los datos son : " + ((InventarioTienda) listaInventarioTienda).getProducto());
                        }
                        //Controles ComboBox
                        comboBoxAlmacenDesde.setEnabled(false);
                        comboBoxAlmacenHasta.setEnabled(false);
                        comboBoxUsuarios.setEnabled(false);
                        //Controles de Panel 2
                        // jLayeredPaneBuscarProducto.setEnabled(true);
                        comboBoxTipoBusqueda.setEnabled(true);
                        txtBusqueda.requestFocus();
                        txtBusqueda.setEnabled(true);
                        jXButtonBuscar.setEnabled(true);
                        botonListarProductosInventariTienda.setEnabled(true);
                        jXButtonConfirmar.setEnabled(false);
                        jXButtonReiniciar.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Debe Selecionar Todos Los Datos");
                    }
                    busy.setEnabled(false);
                    busy.setVisible(false);
                    busy.setBusy(false);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Excepcion AL Confirmar Factura : " + e);
                    System.err.println("ERROR en EVENTO BOTON CONFIRMAR FACTURA : " + e);
                    Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        };
        hilo.start();
        

    }//GEN-LAST:event_jXButtonConfirmarActionPerformed

    private void botonListarProductosInventariTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarProductosInventariTiendaActionPerformed
        
        try {
            JDInventarioTienda jdInventarioTienda
                    = new JDInventarioTienda(null, true,
                            this.resultListInventarioTienda);
            jdInventarioTienda.setLocationRelativeTo(null);
            jdInventarioTienda.setVisible(true);
            if (jdInventarioTienda.inv == null) {
                JOptionPane.showMessageDialog(this, "no ha Seleccionado Facturas");
            } else {
                inv = jdInventarioTienda.inv;

                // this.jLayeredPaneDatosProductos.setEnabled(true);
                this.txtCodigo.setText(inv.getProducto().getIdProducto().toString());
                this.txtCodigo.setEnabled(true);
                this.txtReferencia.setText(inv.getProducto().getReferenciaProducto());
                this.txtReferencia.setEnabled(true);
                this.txtDescripcion.setText(inv.getProducto().getDescripcion());
                this.txtDescripcion.setEnabled(true);
                this.txtMarca.setText(inv.getProducto().getIdMarca().getNombre());
                this.txtMarca.setEnabled(true);
                this.txtExistencia.setText(inv.getCantidad().toString());
                this.txtCantidad.setEnabled(true);
                this.txtNroBulto.setEnabled(true);

                //Botones
                this.botonValidar.setEnabled(true);
                
                this.botonLimpiarAgregar.setEnabled(true);
                this.txtNroBulto.setEnabled(false);
                this.txtCantidad.requestFocus();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar Lista de Facturas" + ex);
            Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_botonListarProductosInventariTiendaActionPerformed

    private void comboBoxAlmacenHastaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxAlmacenHastaMouseClicked
        
        this.jXButtonConfirmar.setEnabled(true);

    }//GEN-LAST:event_comboBoxAlmacenHastaMouseClicked
    

    private void jXButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonBuscarActionPerformed
        boolean encontrado = true;
        
        try {
            if ("".equals(this.txtBusqueda.getText())) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Atributo de Busqueda Por Favor!!!");
            } else {
                int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
                List<InventarioTienda> listaProductos = this.resultListInventarioTienda;
                switch (pos) {
                    case 0:
                        
                        int codigoSKU = Integer.parseInt(this.txtBusqueda.getText());
                        
                        for (InventarioTienda lista : listaProductos) {
                            
                            if (lista.getProducto().getIdProducto().equals(codigoSKU)) {
                                //JOptionPane.showConfirmDialog(this, " EL CODIGO SKU ES CORRECTO");
                                inv = lista;
                                //this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getProducto().getIdProducto().toString());
                                this.txtCodigo.setEnabled(true);
                                this.txtReferencia.setText(lista.getProducto().getReferenciaProducto());
                                this.txtReferencia.setEnabled(true);
                                this.txtDescripcion.setText(lista.getProducto().getDescripcion());
                                this.txtDescripcion.setEnabled(true);
                                this.txtMarca.setText(lista.getProducto().getIdMarca().getNombre());
                                this.txtMarca.setEnabled(true);
                                this.txtExistencia.setText(lista.getCantidad().toString());
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                //this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);
                                this.botonValidar.setEnabled(true);
                                
                            } else {
                                encontrado = false;
                            }
                        }
                        
                        break;
                    case 1:
                        String referencia = this.txtBusqueda.getText();
                        for (InventarioTienda lista : listaProductos) {
                            
                            if (lista.getProducto().getReferenciaProducto().equalsIgnoreCase(referencia)) {
                                //JOptionPane.showConfirmDialog(this, " LA REFERENCIA ES CORRECTA");
                                inv = lista;
                                // this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getProducto().getIdProducto().toString());
                                this.txtReferencia.setText(lista.getProducto().getReferenciaProducto());
                                this.txtDescripcion.setText(lista.getProducto().getDescripcion());
                                this.txtMarca.setText(lista.getProducto().getIdMarca().getNombre());
                                this.txtExistencia.setText(lista.getCantidad().toString());
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);
                            } else {
                                encontrado = false;
                            }
                        }
                        break;
                    
                    case 2:
                        String descripcion = this.txtBusqueda.getText();
                        for (InventarioTienda lista : listaProductos) {
                            
                            if (lista.getProducto().getDescripcion().equalsIgnoreCase(descripcion)) {
                                // JOptionPane.showConfirmDialog(this, " LA DESCRIPCION ES CORRECTA");
                                inv = lista;
                                // this.jLayeredPaneDatosProductos.setEnabled(true);
                                this.txtCodigo.setText(lista.getProducto().getIdProducto().toString());
                                this.txtReferencia.setText(lista.getProducto().getReferenciaProducto());
                                this.txtDescripcion.setText(lista.getProducto().getDescripcion());
                                this.txtMarca.setText(lista.getProducto().getIdMarca().getNombre());
                                this.txtExistencia.setText(lista.getCantidad().toString());
                                this.txtCantidad.setEnabled(true);
                                this.txtNroBulto.setEnabled(true);
                                this.botonAgregar.setEnabled(true);
                                this.botonLimpiarAgregar.setEnabled(true);
                            } else {
                                encontrado = false;
                            }
                        }
                        break;
//            default:
//                throw new AssertionError();

                }
                
                if (encontrado == false) {
                    JOptionPane.showMessageDialog(null, "¡¡¡La Busqueda No Arrojo Ningun Resultado!!!\n"
                            + "Verifique los Datos de Buqueda y Vuelva a Intentarlo.");
                }
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ERROR en la Busqueda : " + e);
            Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jXButtonBuscarActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        
        try {
            if ("".equals(this.txtCantidad.getText())
                    || "".equals(this.txtNroBulto.getText())
                    || inv == null) {
                JOptionPane.showMessageDialog(null, "Las Datos Estan Vacio\n o No existe el Producto");
            } else {
                deReg = new DetalleRegistro();
                deReg.setInv(inv);
                
                deReg.setCantidad(Integer.parseInt(this.txtCantidad.getText()));
                deReg.setBulto(Integer.parseInt(this.txtNroBulto.getText()));
                deReg.setRenglon(renglon++);
                
                listaDetalle.add(deReg);
                
                modeloTablaAsignacion.setListaDetalleResgistro(listaDetalle);
                modeloTablaAsignacion.fireTableDataChanged();
                // mta.setBandera(true);

                this.txtCodigo.setText("");
                this.txtDescripcion.setText("");
                this.txtCantidad.setText("");
                this.txtNroBulto.setText("");
                this.txtReferencia.setText("");
                this.txtMarca.setText("");
                this.txtExistencia.setText("");

                //Accesos
                this.txtNroBulto.setEnabled(false);
                this.txtBusqueda.requestFocus();

                //Remover de Lista Actual Producto Agregago
                this.invAux = inv;
                this.resultListInventarioTienda.remove(inv);

                //Desabilitar Controles Cantida y validar
                this.txtCantidad.setEnabled(false);
                this.botonValidar.setEnabled(false);
                this.jXButtonAsignarMercancia.setEnabled(true);
                
            }
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ERROR Agregando Producto a la Tabla y Lista : " + ex);
            Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_botonAgregarActionPerformed

    private void jXButtonAsignarMercanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonAsignarMercanciaActionPerformed
        
        Thread hilo = new Thread() {
            
            @Override
            public void run() {
                jXButtonAsignarMercancia.setEnabled(false);
                busy1.setVisible(true);
                busy1.setBusy(true);
                
                try {
                    
                    Float total = 0f;

                    //SalidaParaTienda cab = new SalidaParaTienda(ObjectModelDAO.getObject(al.getIdAlmacen(), Almacen.class), user, ayudante);
                    SalidaParaTienda cab = new SalidaParaTienda(almacenDesde, almacenHasta, user, ususrioActual);
                    Integer id_creado_cabecera = (Integer) ObjectModelDAO.saveObject(cab);
                    if (id_creado_cabecera != -1) {//se creo

                        for (DetalleRegistro dr : listaDetalle) {

                            //String sql = "SELECT renglon FROM InventarioTienda renglon WHERE renglon.inventarioTiendaPK.idAlmacen =" + almacenHasta.getIdAlmacen();
                            //List resultListInventarioHasta = ObjectModelDAO.getResultQuery(sql);
                            //InventarioTienda ivtHasta = resultListInventarioHasta.get(0)
                            System.out.println("Datos Lista : " + dr.toString());
                            
                            SalidaParaTiendaDetallePK detallePK = new SalidaParaTiendaDetallePK(
                                    dr.inv.getProducto().getIdProducto(),
                                    id_creado_cabecera);
                            
                            SalidaParaTiendaDetalle detalle = new SalidaParaTiendaDetalle(
                                    detallePK,
                                    dr.getCantidad(),
                                    dr.getBulto(),
                                    dr.getRenglon(),
                                    dr.inv.getProducto(),
                                    cab);
                            
                            Object id_creado_detalle = ObjectModelDAO.saveObject(detalle);
                            if (id_creado_detalle instanceof SalidaParaTiendaDetallePK
                                    && ((SalidaParaTiendaDetallePK) id_creado_detalle) == null) {
                                System.err.println("ERROR AL CREAR REGISTRO DETALLES "
                                        + ((SalidaParaTiendaDetallePK) id_creado_detalle).toString());
                            } else {//se creo
                                //Actualizar Descuesto de Inventario                            
                                System.err.println("Creando PK inventario");
                                InventarioTiendaPK inventarioPK = new InventarioTiendaPK(//Guaradar InventarioPK
                                        dr.inv.getProducto().getIdProducto(),
                                        almacenDesde.getIdAlmacen()
                                );
                                //Guaradar Inventario
                                InventarioTienda id_in = ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class);
                                System.err.println("ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class) es: " + id_in);
                                if (id_in == null) {
                                    System.err.println("Mesaje");
                                    JOptionPane.showMessageDialog(null, "El Producto no Existe en La Tienda de Donde se Envia");
                                } else {
                                    // id_in.setPrecio(dr.ep.getIdProducto().getPrecioOriginal());
                                    //id_in.setDescuento(0f);
                                    id_in.setCantidad(id_in.getCantidad() - dr.getCantidad());
                                    ObjectModelDAO.updateObject(id_in);
                                    System.err.println("Actualizando Inventario de Producto Existente");

                                    //Actualizar Obtener Precio                            
                                    System.err.println("Creando PK inventario");
                                    InventarioTiendaPK inventarioPK2 = new InventarioTiendaPK(//Guaradar InventarioPK
                                            dr.inv.getProducto().getIdProducto(),
                                            almacenHasta.getIdAlmacen()
                                    );
                                    //Guaradar Inventario
                                    InventarioTienda id_in2 = ObjectModelDAO.getObject(inventarioPK2, InventarioTienda.class);
                                    System.err.println("ObjectModelDAO.getObject(inventarioPK, InventarioTienda.class) es: " + id_in);
                                    if (id_in2 == null) {
                                        JOptionPane.showMessageDialog(null, "El Producto no Existe en La Tienda Hacia se Envia,se creara");
                                        
                                        id_in2 = new InventarioTienda(
                                                inventarioPK2,
                                                dr.getCantidad(),
                                                almacenHasta,
                                                dr.inv.getProducto()
                                        );
                                        
                                        id_in2.setPrecioConDescuento(id_in.getPrecioConDescuento());
                                        id_in2.setPrecioSinDescuento(id_in.getPrecioSinDescuento());
                                        id_in2.setDescuento(0);
                                        ObjectModelDAO.saveObject(id_in2);
//crear if varificando si el inventario2 se creo                                        
//Object id_creado_inventario = ObjectModelDAO.saveObject(id_in);
                                    }

                                    //total += id_in2.getPrecioConDescuento();
                                    System.err.println("EXITO CREANDO REGISTRO LISTA DETALLES:");
                                    JOptionPane.showMessageDialog(null, "¡¡¡REGISTRO GUARDADO CON EXITO!!!");
                                }
                            }
                        }
                    }
                    
                    cab.setTotal(total);
                    //cab.setRevisado(false);
                    ObjectModelDAO.updateObject(cab);
                    //  jXTable1.clearSelection();
                    listaDetalle.clear();
                    modeloTablaAsignacion.fireTableDataChanged();
                    jXButtonConfirmar.setEnabled(true);
                    //Controles ComboBox
                    comboBoxAlmacenDesde.setEnabled(true);
                    comboBoxAlmacenHasta.setEnabled(true);
                    comboBoxUsuarios.setEnabled(true);
                    //BOnton
                    jXButtonConfirmar.setEnabled(false);
                    //OBjetos
                    ususrioActual = null;
                    almacenDesde = null;
                    almacenHasta = null;
                    //Controles ComboBox
                    comboBoxAlmacenDesde.setSelectedIndex(-1);
                    comboBoxAlmacenHasta.setSelectedIndex(-1);
                    comboBoxUsuarios.setSelectedIndex(-1);
                    //COntroles Panel desabilitar
                    //this.jLayeredPaneBuscarProducto.setEnabled(false);
                    comboBoxTipoBusqueda.setEnabled(false);
                    txtBusqueda.setEnabled(false);
                    jXButtonBuscar.setEnabled(false);
                    botonListarProductosInventariTienda.setEnabled(false);
                    //Controles internos de este boton o metodo
                    botonLimpiarAgregar.setEnabled(false);
                    botonAgregar.setEnabled(false);
                    jXButtonAsignarMercancia.setEnabled(false);
                    
                    busy1.setEnabled(false);
                    busy1.setVisible(false);
                    busy1.setBusy(false);
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "ERROR Asignando Mercancia :" + e);
                    System.err.println("ERROR Asignando Mercancia :" + e);
                    Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, e);
                }

                // busy.setVisible(false);
                // busy.setBusy(false);
                //  
                //MetodoGenerales.activarControles3(pnlRegistro, true);
                //MetodoGenerales.activarControles3(pnlListaRegistros, false);
                //  
                // 
                //usuarioValidado();
                //fa = null;
                // al = null;
                // txtAlmcen.setText("");
                // pro = null;
            }
        };
        hilo.start();
        

    }//GEN-LAST:event_jXButtonAsignarMercanciaActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed

//        try {
//            if ((Integer.parseInt(this.txtCantidad.getText())) == 0
//                    || "".equals(this.txtCantidad.getText())
//                    || inv.getCantidad() <= (Math.abs(Integer.parseInt(this.txtCantidad.getText())))
//                    ) {
//                JOptionPane.showMessageDialog(null, "Imposible Asignar Mercancia (NO Hay Sufiente) \n La Cantida SUjeridad es : " + inv.getCantidad());
//
//            } else {
//                
//                this.txtNroBulto.setEnabled(true);
//                this.txtNroBulto.requestFocus();
//            }
//        } catch (NumberFormatException | HeadlessException e) {
//            System.err.println("ERROR Siguiente : \n Imposible Asignar Mercancia (NO Hay Sufiente)  :" + e);
//            Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, e);
//        }

    }//GEN-LAST:event_txtCantidadActionPerformed

    private void jXButtonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButtonReiniciarActionPerformed
        
        try {
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro Desea Cancelar?", "Confirmacion", JOptionPane.YES_NO_OPTION);
            
            if (respuesta == JOptionPane.YES_OPTION) {
                // this.jXButtonConfirmar.setEnabled(true);
                //Limpiar Lista y Tabla
                this.listaDetalle.clear();
                this.TablaDetalleRegistrosAsignacionMercancia1.removeAll();

                //Controles ComboBox
                this.comboBoxAlmacenDesde.setEnabled(true);
                this.comboBoxAlmacenHasta.setEnabled(true);
                this.comboBoxUsuarios.setEnabled(true);

                //BOntones de Pedido
                this.jXButtonConfirmar.setEnabled(false);
                //OBjetos
                this.ususrioActual = null;
                this.almacenDesde = null;
                this.almacenHasta = null;

                //Controles ComboBox
                this.comboBoxAlmacenDesde.setSelectedIndex(-1);
                this.comboBoxAlmacenHasta.setSelectedIndex(-1);
                this.comboBoxUsuarios.setSelectedIndex(-1);

                //COntroles Panel Busqueda desabilitar
                this.comboBoxTipoBusqueda.setEnabled(false);
                this.txtBusqueda.setEnabled(false);
                this.jXButtonBuscar.setEnabled(false);
                this.botonListarProductosInventariTienda.setEnabled(false);

                //Limpiar Campos de Texto
                this.txtCodigo.setText("");
                this.txtCodigo.setEnabled(false);
                this.txtDescripcion.setText("");
                this.txtDescripcion.setEnabled(false);
                this.txtReferencia.setText("");
                this.txtReferencia.setEnabled(false);
                this.txtMarca.setText("");
                this.txtMarca.setEnabled(false);
                this.txtExistencia.setText("");
                this.txtExistencia.setEnabled(false);
                this.txtCantidad.setText("");
                this.txtCantidad.setEnabled(false);
                this.txtNroBulto.setText("");
                this.txtNroBulto.setEnabled(false);

                //Botones de Datos del Producto
                this.botonValidar.setEnabled(false);
                this.botonAgregar.setEnabled(false);
                this.botonLimpiarAgregar.setEnabled(false);
                
            }
        } catch (Exception e) {
            Logger.getLogger(AsignarMercancia.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Por Favor, Seleccione Un Pedido Valido Para Continuar.!!!");
            System.err.println("ERROR ó Excepcion Boton Reiniciar Todo Desde Pedido : " + e);
        }
        

    }//GEN-LAST:event_jXButtonReiniciarActionPerformed

    private void comboBoxAlmacenDesdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxAlmacenDesdeMouseClicked
        
        this.jXButtonConfirmar.setEnabled(true);

    }//GEN-LAST:event_comboBoxAlmacenDesdeMouseClicked

    private void comboBoxUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxUsuariosMouseClicked
        
        this.jXButtonConfirmar.setEnabled(true);

    }//GEN-LAST:event_comboBoxUsuariosMouseClicked

    private void txtNroBultoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroBultoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroBultoActionPerformed

    private void botonLimpiarAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarAgregarActionPerformed

        //Limpiar Campos de Texto
        this.txtCodigo.setText("");
        this.txtDescripcion.setText("");
        this.txtReferencia.setText("");
        this.txtMarca.setText("");
        this.txtExistencia.setText("");
        this.txtCantidad.setText("");
        this.txtNroBulto.setText("");

    }//GEN-LAST:event_botonLimpiarAgregarActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        
        char car = evt.getKeyChar();
        String cadena = ",-_{}[¨*+´!°#$%&/()=?¡.;;><qwertyuiopñlkjhgfdsazxcvbnm,.-ç´+`¡'<º"
                + "¨_:´:_.-*^+`QWERTYUIOPÑLKJHGFDSAZXCVBNM,.-´ç+`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
        char s = '"';
        for (int i = 0; i < cadena.length(); i++) {
            if (car == cadena.charAt(i) || car == s) {
                evt.consume();
            }
        }

    }//GEN-LAST:event_txtCantidadKeyTyped

    private void botonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonValidarActionPerformed
        
        try {
            
            if ("".equals(this.txtCantidad.getText())) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Cantidad Por Favor!!!");
            }
            if (Integer.parseInt(this.txtCantidad.getText()) == 0) {
                JOptionPane.showMessageDialog(null, "¡¡¡Intriduzca Cantidad Por Favor!!!");
            }
            if (inv.getCantidad() < (Math.abs(Integer.parseInt(this.txtCantidad.getText())))) {
                JOptionPane.showMessageDialog(null, "¡¡¡La Cantida Supera la Existencia en Inventario!!!");
            }
            
            if (inv.getCantidad() >= (Math.abs(Integer.parseInt(this.txtCantidad.getText())))) {
                this.txtNroBulto.setEnabled(true);
                this.txtNroBulto.requestFocus();
                this.botonAgregar.setEnabled(true);
                this.botonLimpiarAgregar.setEnabled(true);
            }
//            if (respuesta == JOptionPane.NO_OPTION) {
//                this.txtCantidad.setText("");
//                this.txtCantidad.requestFocus();
//            }

        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "ERROR Evento Boton Validar : " + e);
            Logger.getLogger(TomaFisicaInventarioDistribuidora.class.getName()).log(Level.SEVERE, null, e);
            
        }
    }//GEN-LAST:event_botonValidarActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        
        int pos = this.comboBoxTipoBusqueda.getSelectedIndex();
        switch (pos) {
            case 0:
                char car = evt.getKeyChar();
                String cadena = "_{}[¨*´!°#$%&/()=?;;><qwertyuiopñlkjhgfdsazxcvbnm´`¡'<º"
                        + "¨_:´:_*^`QWERTYUIOPÑLKJHGFDSAZXCVBNM´ç`¡'º<>ª!^·$%&/()=?¿*"; // Caracterens no validos
                char s = '"';
                for (int i = 0; i < cadena.length(); i++) {
                    if (car == cadena.charAt(i) || car == s) {
                        JOptionPane.showMessageDialog(null, "Por Favor, Introduzca Valores Numerico Para Este Tipo de Busqueda|n"
                                + "ó Seleccione El Tipo de Busqueda Correcta.");
                        evt.consume();
                    }
                }
            //  break;

        }

    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void comboBoxTipoBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxTipoBusquedaItemStateChanged
        
        this.txtBusqueda.setText("");
        this.txtBusqueda.requestFocus();

    }//GEN-LAST:event_comboBoxTipoBusquedaItemStateChanged

    private void jXButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXButton1ActionPerformed
//        String SQL = "COPY (select 0 as a,1 as b,replicate(' ', 7) || id_producto As id_producto, \n"
//                + "		LTRIM(replace((RTRIM(descripcion)),',',' ')) as descripcion, \n"
//                + "		(REPLICATE(' ', 3)||Cast(id_clasificacion as varchar)) As id_clasificacion,\n"
//                + "		0 as a1,0 as a2,0 as a3,0 as a4,65 as excento,\n"
//                + "		\n"
//                + "		' ' as i, ' ' as j, 0 as k, 0 as l,0 as m, 0 as n, 0 as p, 0 as q,0 as r,0 as s,\n"
//                + "		' ' as t,0 as u,1 as v,0 as w,0 as x,0 as y,0 as z,0 as ab \n"
//                + "		\n"
//                + "From producto  \n"
//                + "where precio_original>0.05 and descripcion not like ' '  and id_producto>=100000\n"
//                + "Order By id_producto) TO 'C:/Users/Pablo/export/prueba.txt' WITH DELIMITER AS ',' ";
   //     String SQL="select now() as laHora";
        
        String SQL="COPY (select * from usuario) TO "
                + "'C:/Users/Pablo/export/prueba.txt' WITH DELIMITER AS ','";
        ObjectModelDAO.getResultQueryString(SQL); 
        
    }//GEN-LAST:event_jXButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaDetalleRegistrosAsignacionMercancia1;
    private org.jdesktop.swingx.JXButton botonAgregar;
    private org.jdesktop.swingx.JXButton botonLimpiarAgregar;
    private org.jdesktop.swingx.JXButton botonListarProductosInventariTienda;
    private org.jdesktop.swingx.JXButton botonValidar;
    private org.jdesktop.swingx.JXBusyLabel busy;
    private org.jdesktop.swingx.JXBusyLabel busy1;
    private javax.swing.JComboBox comboBoxAlmacenDesde;
    private javax.swing.JComboBox comboBoxAlmacenHasta;
    private javax.swing.JComboBox comboBoxTipoBusqueda;
    private javax.swing.JComboBox comboBoxUsuarios;
    private javax.swing.JLayeredPane jLayeredPaneBuscarProducto;
    private javax.swing.JLayeredPane jLayeredPaneDatosProductos;
    private javax.swing.JLayeredPane jLayeredPanePrincipal;
    private javax.swing.JLayeredPane jLayeredPaneProductos;
    private javax.swing.JLayeredPane jLayeredPaneTienda;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXButton jXButton1;
    private org.jdesktop.swingx.JXButton jXButtonAsignarMercancia;
    private org.jdesktop.swingx.JXButton jXButtonBuscar;
    private org.jdesktop.swingx.JXButton jXButtonConfirmar;
    private org.jdesktop.swingx.JXButton jXButtonReiniciar;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private org.jdesktop.swingx.JXLabel labelReferencia;
    private org.jdesktop.swingx.JXTextField txtBusqueda;
    private org.jdesktop.swingx.JXTextField txtCantidad;
    private org.jdesktop.swingx.JXTextField txtCodigo;
    private org.jdesktop.swingx.JXTextField txtDescripcion;
    private org.jdesktop.swingx.JXTextField txtExistencia;
    private org.jdesktop.swingx.JXTextField txtMarca;
    private org.jdesktop.swingx.JXTextField txtNroBulto;
    private org.jdesktop.swingx.JXTextField txtReferencia;
    // End of variables declaration//GEN-END:variables

}
